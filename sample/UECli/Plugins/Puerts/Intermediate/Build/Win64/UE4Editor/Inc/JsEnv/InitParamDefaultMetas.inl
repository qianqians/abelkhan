PC = &ParamDefaultMetas.Add(TEXT("AssetRegistryHelpers"));
PF = &PC->Add(TEXT("CreateAssetData"));
PF->Add(TEXT("bAllowBlueprintClass"), TEXT("False"));

PC = &ParamDefaultMetas.Add(TEXT("GameMapsSettings"));
PF = &PC->Add(TEXT("SetSkipAssigningGamepadToPlayer1"));
PF->Add(TEXT("bSkipFirstPlayer"), TEXT("True"));

PC = &ParamDefaultMetas.Add(TEXT("StaticMeshDescription"));
PF = &PC->Add(TEXT("SetVertexInstanceUV"));
PF->Add(TEXT("UVIndex"), TEXT("0"));
PF = &PC->Add(TEXT("GetVertexInstanceUV"));
PF->Add(TEXT("UVIndex"), TEXT("0"));

PC = &ParamDefaultMetas.Add(TEXT("ClothingSimulationInteractor"));
PF = &PC->Add(TEXT("SetNumSubsteps"));
PF->Add(TEXT("NumSubsteps"), TEXT("1"));
PF = &PC->Add(TEXT("SetNumIterations"));
PF->Add(TEXT("NumIterations"), TEXT("2"));

PC = &ParamDefaultMetas.Add(TEXT("Actor"));
PF = &PC->Add(TEXT("MakeNoise"));
PF->Add(TEXT("Loudness"), TEXT("1.000000"));
PF->Add(TEXT("NoiseInstigator"), TEXT("None"));
PF->Add(TEXT("NoiseLocation"), TEXT(""));
PF->Add(TEXT("MaxRange"), TEXT("0.000000"));
PF->Add(TEXT("Tag"), TEXT("None"));
PF = &PC->Add(TEXT("PrestreamTextures"));
PF->Add(TEXT("CinematicTextureGroups"), TEXT("0"));
PF = &PC->Add(TEXT("WasRecentlyRendered"));
PF->Add(TEXT("Tolerance"), TEXT("0.200000"));
PF = &PC->Add(TEXT("GetAttachedActors"));
PF->Add(TEXT("bResetArray"), TEXT("True"));
PF = &PC->Add(TEXT("GetAllChildActors"));
PF->Add(TEXT("bIncludeDescendants"), TEXT("True"));
PF = &PC->Add(TEXT("SetActorLabel"));
PF->Add(TEXT("bMarkDirty"), TEXT("True"));
PF = &PC->Add(TEXT("IsTemporarilyHiddenInEditor"));
PF->Add(TEXT("bIncludeParent"), TEXT("False"));
PF = &PC->Add(TEXT("GetOverlappingActors"));
PF->Add(TEXT("ClassFilter"), TEXT("None"));
PF = &PC->Add(TEXT("K2_DetachFromActor"));
PF->Add(TEXT("LocationRule"), TEXT("KeepRelative"));
PF->Add(TEXT("RotationRule"), TEXT("KeepRelative"));
PF->Add(TEXT("ScaleRule"), TEXT("KeepRelative"));
PF = &PC->Add(TEXT("DetachRootComponentFromParent"));
PF->Add(TEXT("bMaintainWorldPosition"), TEXT("True"));
PF = &PC->Add(TEXT("K2_AttachRootComponentToActor"));
PF->Add(TEXT("InSocketName"), TEXT("None"));
PF->Add(TEXT("AttachLocationType"), TEXT("KeepRelativeOffset"));
PF->Add(TEXT("bWeldSimulatedBodies"), TEXT("True"));
PF = &PC->Add(TEXT("K2_AttachRootComponentTo"));
PF->Add(TEXT("InSocketName"), TEXT("None"));
PF->Add(TEXT("AttachLocationType"), TEXT("KeepRelativeOffset"));
PF->Add(TEXT("bWeldSimulatedBodies"), TEXT("True"));
PF = &PC->Add(TEXT("AddComponent"));
PF->Add(TEXT("bDeferredFinish"), TEXT("False"));
PF = &PC->Add(TEXT("GetActorBounds"));
PF->Add(TEXT("bIncludeFromChildActors"), TEXT("False"));

PC = &ParamDefaultMetas.Add(TEXT("ActorComponent"));
PF = &PC->Add(TEXT("SetActive"));
PF->Add(TEXT("bReset"), TEXT("False"));
PF = &PC->Add(TEXT("Activate"));
PF->Add(TEXT("bReset"), TEXT("False"));

PC = &ParamDefaultMetas.Add(TEXT("AnimInstance"));
PF = &PC->Add(TEXT("IsSyncGroupBetweenMarkers"));
PF->Add(TEXT("bRespectMarkerOrder"), TEXT("True"));
PF = &PC->Add(TEXT("Montage_GetCurrentSection"));
PF->Add(TEXT("Montage"), TEXT("None"));
PF = &PC->Add(TEXT("Montage_SetPlayRate"));
PF->Add(TEXT("NewPlayRate"), TEXT("1.000000"));
PF = &PC->Add(TEXT("Montage_SetNextSection"));
PF->Add(TEXT("Montage"), TEXT("None"));
PF = &PC->Add(TEXT("Montage_JumpToSectionsEnd"));
PF->Add(TEXT("Montage"), TEXT("None"));
PF = &PC->Add(TEXT("Montage_JumpToSection"));
PF->Add(TEXT("Montage"), TEXT("None"));
PF = &PC->Add(TEXT("Montage_Pause"));
PF->Add(TEXT("Montage"), TEXT("None"));
PF = &PC->Add(TEXT("Montage_Stop"));
PF->Add(TEXT("Montage"), TEXT("None"));
PF = &PC->Add(TEXT("Montage_Play"));
PF->Add(TEXT("InPlayRate"), TEXT("1.000000"));
PF->Add(TEXT("ReturnValueType"), TEXT("MontageLength"));
PF->Add(TEXT("InTimeToStartMontageAt"), TEXT("0.000000"));
PF->Add(TEXT("bStopAllMontages"), TEXT("True"));
PF = &PC->Add(TEXT("StopSlotAnimation"));
PF->Add(TEXT("InBlendOutTime"), TEXT("0.250000"));
PF->Add(TEXT("SlotNodeName"), TEXT("None"));
PF = &PC->Add(TEXT("PlaySlotAnimationAsDynamicMontage"));
PF->Add(TEXT("BlendInTime"), TEXT("0.250000"));
PF->Add(TEXT("BlendOutTime"), TEXT("0.250000"));
PF->Add(TEXT("InPlayRate"), TEXT("1.000000"));
PF->Add(TEXT("LoopCount"), TEXT("1"));
PF->Add(TEXT("BlendOutTriggerTime"), TEXT("-1.000000"));
PF->Add(TEXT("InTimeToStartMontageAt"), TEXT("0.000000"));
PF = &PC->Add(TEXT("PlaySlotAnimation"));
PF->Add(TEXT("BlendInTime"), TEXT("0.250000"));
PF->Add(TEXT("BlendOutTime"), TEXT("0.250000"));
PF->Add(TEXT("InPlayRate"), TEXT("1.000000"));
PF->Add(TEXT("LoopCount"), TEXT("1"));

PC = &ParamDefaultMetas.Add(TEXT("AvoidanceManager"));
PF = &PC->Add(TEXT("RegisterMovementComponent"));
PF->Add(TEXT("AvoidanceWeight"), TEXT("0.500000"));

PC = &ParamDefaultMetas.Add(TEXT("CameraAnimInst"));
PF = &PC->Add(TEXT("Stop"));
PF->Add(TEXT("bImmediate"), TEXT("False"));

PC = &ParamDefaultMetas.Add(TEXT("CameraModifier"));
PF = &PC->Add(TEXT("DisableModifier"));
PF->Add(TEXT("bImmediate"), TEXT("False"));

PC = &ParamDefaultMetas.Add(TEXT("Canvas"));
PF = &PC->Add(TEXT("K2_TextSize"));
PF->Add(TEXT("Scale"), TEXT("(X=1.000,Y=1.000)"));
PF = &PC->Add(TEXT("K2_DrawPolygon"));
PF->Add(TEXT("Radius"), TEXT("(X=1.000,Y=1.000)"));
PF->Add(TEXT("NumberOfSides"), TEXT("3"));
PF->Add(TEXT("RenderColor"), TEXT("(R=1.000000,G=1.000000,B=1.000000,A=1.000000)"));
PF = &PC->Add(TEXT("K2_DrawBox"));
PF->Add(TEXT("Thickness"), TEXT("1.000000"));
PF->Add(TEXT("RenderColor"), TEXT("(R=1.000000,G=1.000000,B=1.000000,A=1.000000)"));
PF = &PC->Add(TEXT("K2_DrawBorder"));
PF->Add(TEXT("CoordinateSize"), TEXT("(X=1.000,Y=1.000)"));
PF->Add(TEXT("RenderColor"), TEXT("(R=1.000000,G=1.000000,B=1.000000,A=1.000000)"));
PF->Add(TEXT("BorderScale"), TEXT("(X=0.100,Y=0.100)"));
PF->Add(TEXT("BackgroundScale"), TEXT("(X=0.100,Y=0.100)"));
PF->Add(TEXT("Rotation"), TEXT("0.000000"));
PF->Add(TEXT("PivotPoint"), TEXT("(X=0.500,Y=0.500)"));
PF->Add(TEXT("CornerSize"), TEXT(""));
PF = &PC->Add(TEXT("K2_DrawText"));
PF->Add(TEXT("Scale"), TEXT("(X=1.000,Y=1.000)"));
PF->Add(TEXT("RenderColor"), TEXT("(R=1.000000,G=1.000000,B=1.000000,A=1.000000)"));
PF->Add(TEXT("Kerning"), TEXT("0.000000"));
PF->Add(TEXT("ShadowColor"), TEXT("(R=0.000000,G=0.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("ShadowOffset"), TEXT("(X=1.000,Y=1.000)"));
PF->Add(TEXT("bCentreX"), TEXT("False"));
PF->Add(TEXT("bCentreY"), TEXT("False"));
PF->Add(TEXT("bOutlined"), TEXT("False"));
PF->Add(TEXT("OutlineColor"), TEXT("(R=0.000000,G=0.000000,B=0.000000,A=1.000000)"));
PF = &PC->Add(TEXT("K2_DrawMaterial"));
PF->Add(TEXT("CoordinateSize"), TEXT("(X=1.000,Y=1.000)"));
PF->Add(TEXT("Rotation"), TEXT("0.000000"));
PF->Add(TEXT("PivotPoint"), TEXT("(X=0.500,Y=0.500)"));
PF = &PC->Add(TEXT("K2_DrawTexture"));
PF->Add(TEXT("CoordinateSize"), TEXT("(X=1.000,Y=1.000)"));
PF->Add(TEXT("RenderColor"), TEXT("(R=1.000000,G=1.000000,B=1.000000,A=1.000000)"));
PF->Add(TEXT("BlendMode"), TEXT("BLEND_Translucent"));
PF->Add(TEXT("Rotation"), TEXT("0.000000"));
PF->Add(TEXT("PivotPoint"), TEXT("(X=0.500,Y=0.500)"));
PF = &PC->Add(TEXT("K2_DrawLine"));
PF->Add(TEXT("ScreenPositionA"), TEXT(""));
PF->Add(TEXT("ScreenPositionB"), TEXT(""));
PF->Add(TEXT("Thickness"), TEXT("1.000000"));
PF->Add(TEXT("RenderColor"), TEXT("(R=1.000000,G=1.000000,B=1.000000,A=1.000000)"));

PC = &ParamDefaultMetas.Add(TEXT("CheatManager"));
PF = &PC->Add(TEXT("BugIt"));
PF->Add(TEXT("ScreenShotDescription"), TEXT(""));

PC = &ParamDefaultMetas.Add(TEXT("GameUserSettings"));
PF = &PC->Add(TEXT("EnableHDRDisplayOutput"));
PF->Add(TEXT("DisplayNits"), TEXT("1000"));
PF = &PC->Add(TEXT("RunHardwareBenchmark"));
PF->Add(TEXT("WorkScale"), TEXT("10"));
PF->Add(TEXT("CPUMultiplier"), TEXT("1.000000"));
PF->Add(TEXT("GPUMultiplier"), TEXT("1.000000"));
PF = &PC->Add(TEXT("LoadSettings"));
PF->Add(TEXT("bForceReload"), TEXT("False"));

PC = &ParamDefaultMetas.Add(TEXT("InputSettings"));
PF = &PC->Add(TEXT("RemoveAxisMapping"));
PF->Add(TEXT("bForceRebuildKeymaps"), TEXT("True"));
PF = &PC->Add(TEXT("AddAxisMapping"));
PF->Add(TEXT("bForceRebuildKeymaps"), TEXT("True"));
PF = &PC->Add(TEXT("RemoveActionMapping"));
PF->Add(TEXT("bForceRebuildKeymaps"), TEXT("True"));
PF = &PC->Add(TEXT("AddActionMapping"));
PF->Add(TEXT("bForceRebuildKeymaps"), TEXT("True"));

PC = &ParamDefaultMetas.Add(TEXT("MaterialInterface"));
PF = &PC->Add(TEXT("SetForceMipLevelsToBeResident"));
PF->Add(TEXT("CinematicTextureGroups"), TEXT("0"));
PF->Add(TEXT("bFastResponse"), TEXT("False"));

PC = &ParamDefaultMetas.Add(TEXT("AmbientSound"));
PF = &PC->Add(TEXT("Play"));
PF->Add(TEXT("StartTime"), TEXT("0.000000"));
PF = &PC->Add(TEXT("FadeIn"));
PF->Add(TEXT("FadeVolumeLevel"), TEXT("1.000000"));

PC = &ParamDefaultMetas.Add(TEXT("Controller"));
PF = &PC->Add(TEXT("LineOfSightTo"));
PF->Add(TEXT("ViewPoint"), TEXT(""));
PF->Add(TEXT("bAlternateChecks"), TEXT("False"));

PC = &ParamDefaultMetas.Add(TEXT("HUD"));
PF = &PC->Add(TEXT("AddHitBox"));
PF->Add(TEXT("Priority"), TEXT("0"));
PF = &PC->Add(TEXT("GetActorsInSelectionRectangle"));
PF->Add(TEXT("bIncludeNonCollidingComponents"), TEXT("True"));
PF->Add(TEXT("bActorMustBeFullyEnclosed"), TEXT("False"));
PF = &PC->Add(TEXT("DrawMaterialTriangle"));
PF->Add(TEXT("V0_Color"), TEXT("(R=1.000000,G=1.000000,B=1.000000,A=1.000000)"));
PF->Add(TEXT("V1_Color"), TEXT("(R=1.000000,G=1.000000,B=1.000000,A=1.000000)"));
PF->Add(TEXT("V2_Color"), TEXT("(R=1.000000,G=1.000000,B=1.000000,A=1.000000)"));
PF = &PC->Add(TEXT("DrawMaterialSimple"));
PF->Add(TEXT("Scale"), TEXT("1.000000"));
PF->Add(TEXT("bScalePosition"), TEXT("False"));
PF = &PC->Add(TEXT("DrawMaterial"));
PF->Add(TEXT("Scale"), TEXT("1.000000"));
PF->Add(TEXT("bScalePosition"), TEXT("False"));
PF->Add(TEXT("Rotation"), TEXT("0.000000"));
PF->Add(TEXT("RotPivot"), TEXT(""));
PF = &PC->Add(TEXT("DrawTextureSimple"));
PF->Add(TEXT("Scale"), TEXT("1.000000"));
PF->Add(TEXT("bScalePosition"), TEXT("False"));
PF = &PC->Add(TEXT("DrawTexture"));
PF->Add(TEXT("TintColor"), TEXT("(R=1.000000,G=1.000000,B=1.000000,A=1.000000)"));
PF->Add(TEXT("BlendMode"), TEXT("BLEND_Translucent"));
PF->Add(TEXT("Scale"), TEXT("1.000000"));
PF->Add(TEXT("bScalePosition"), TEXT("False"));
PF->Add(TEXT("Rotation"), TEXT("0.000000"));
PF->Add(TEXT("RotPivot"), TEXT(""));
PF = &PC->Add(TEXT("DrawLine"));
PF->Add(TEXT("LineThickness"), TEXT("0.000000"));
PF = &PC->Add(TEXT("DrawText"));
PF->Add(TEXT("Font"), TEXT("None"));
PF->Add(TEXT("Scale"), TEXT("1.000000"));
PF->Add(TEXT("bScalePosition"), TEXT("False"));
PF = &PC->Add(TEXT("GetTextSize"));
PF->Add(TEXT("Font"), TEXT("None"));
PF->Add(TEXT("Scale"), TEXT("1.000000"));
PF = &PC->Add(TEXT("ShowDebug"));
PF->Add(TEXT("DebugType"), TEXT("None"));

PC = &ParamDefaultMetas.Add(TEXT("LevelScriptActor"));
PF = &PC->Add(TEXT("SetCinematicMode"));
PF->Add(TEXT("bHidePlayer"), TEXT("True"));
PF->Add(TEXT("bAffectsHUD"), TEXT("True"));
PF->Add(TEXT("bAffectsMovement"), TEXT("False"));
PF->Add(TEXT("bAffectsTurning"), TEXT("False"));

PC = &ParamDefaultMetas.Add(TEXT("MatineeActor"));
PF = &PC->Add(TEXT("SetPosition"));
PF->Add(TEXT("bJump"), TEXT("False"));

PC = &ParamDefaultMetas.Add(TEXT("Pawn"));
PF = &PC->Add(TEXT("AddMovementInput"));
PF->Add(TEXT("ScaleValue"), TEXT("1.000000"));
PF->Add(TEXT("bForce"), TEXT("False"));
PF = &PC->Add(TEXT("SetCanAffectNavigationGeneration"));
PF->Add(TEXT("bForceUpdate"), TEXT("False"));
PF = &PC->Add(TEXT("PawnMakeNoise"));
PF->Add(TEXT("bUseNoiseMakerLocation"), TEXT("True"));
PF->Add(TEXT("NoiseMaker"), TEXT("None"));

PC = &ParamDefaultMetas.Add(TEXT("PlayerCameraManager"));
PF = &PC->Add(TEXT("StopAllCameraAnims"));
PF->Add(TEXT("bImmediate"), TEXT("False"));
PF = &PC->Add(TEXT("StopCameraAnimInst"));
PF->Add(TEXT("bImmediate"), TEXT("False"));
PF = &PC->Add(TEXT("StopAllInstancesOfCameraAnim"));
PF->Add(TEXT("bImmediate"), TEXT("False"));
PF = &PC->Add(TEXT("PlayCameraAnim"));
PF->Add(TEXT("Rate"), TEXT("1.000000"));
PF->Add(TEXT("Scale"), TEXT("1.000000"));
PF->Add(TEXT("BlendInTime"), TEXT("0.000000"));
PF->Add(TEXT("BlendOutTime"), TEXT("0.000000"));
PF->Add(TEXT("bLoop"), TEXT("False"));
PF->Add(TEXT("bRandomStartTime"), TEXT("False"));
PF->Add(TEXT("Duration"), TEXT("0.000000"));
PF->Add(TEXT("PlaySpace"), TEXT("CameraLocal"));
PF->Add(TEXT("UserPlaySpaceRot"), TEXT(""));
PF = &PC->Add(TEXT("StartCameraFade"));
PF->Add(TEXT("bShouldFadeAudio"), TEXT("False"));
PF->Add(TEXT("bHoldWhenFinished"), TEXT("False"));
PF = &PC->Add(TEXT("StopAllCameraShakesFromSource"));
PF->Add(TEXT("bImmediately"), TEXT("True"));
PF = &PC->Add(TEXT("StopAllInstancesOfCameraShakeFromSource"));
PF->Add(TEXT("bImmediately"), TEXT("True"));
PF = &PC->Add(TEXT("StopAllCameraShakes"));
PF->Add(TEXT("bImmediately"), TEXT("True"));
PF = &PC->Add(TEXT("StopAllInstancesOfCameraShake"));
PF->Add(TEXT("bImmediately"), TEXT("True"));
PF = &PC->Add(TEXT("StopCameraShake"));
PF->Add(TEXT("bImmediately"), TEXT("True"));
PF = &PC->Add(TEXT("StartCameraShakeFromSource"));
PF->Add(TEXT("Scale"), TEXT("1.000000"));
PF->Add(TEXT("PlaySpace"), TEXT("CameraLocal"));
PF->Add(TEXT("UserPlaySpaceRot"), TEXT(""));
PF = &PC->Add(TEXT("StartCameraShake"));
PF->Add(TEXT("Scale"), TEXT("1.000000"));
PF->Add(TEXT("PlaySpace"), TEXT("CameraLocal"));
PF->Add(TEXT("UserPlaySpaceRot"), TEXT(""));

PC = &ParamDefaultMetas.Add(TEXT("PostProcessVolume"));
PF = &PC->Add(TEXT("AddOrUpdateBlendable"));
PF->Add(TEXT("InWeight"), TEXT("1.000000"));

PC = &ParamDefaultMetas.Add(TEXT("PlayerController"));
PF = &PC->Add(TEXT("SetViewTargetWithBlend"));
PF->Add(TEXT("BlendTime"), TEXT("0.000000"));
PF->Add(TEXT("BlendFunc"), TEXT("VTBlend_Linear"));
PF->Add(TEXT("BlendExp"), TEXT("0.000000"));
PF->Add(TEXT("bLockOutgoing"), TEXT("False"));
PF = &PC->Add(TEXT("PlayHapticEffect"));
PF->Add(TEXT("Scale"), TEXT("1.000000"));
PF->Add(TEXT("bLoop"), TEXT("False"));
PF = &PC->Add(TEXT("ClientStopCameraShakesFromSource"));
PF->Add(TEXT("bImmediately"), TEXT("True"));
PF = &PC->Add(TEXT("ClientStopCameraShake"));
PF->Add(TEXT("bImmediately"), TEXT("True"));
PF = &PC->Add(TEXT("ClientStartCameraShake"));
PF->Add(TEXT("Scale"), TEXT("1.000000"));
PF->Add(TEXT("PlaySpace"), TEXT("CameraLocal"));
PF->Add(TEXT("UserPlaySpaceRot"), TEXT(""));
PF = &PC->Add(TEXT("ClientPlayCameraAnim"));
PF->Add(TEXT("Scale"), TEXT("1.000000"));
PF->Add(TEXT("Rate"), TEXT("1.000000"));
PF->Add(TEXT("BlendInTime"), TEXT("0.000000"));
PF->Add(TEXT("BlendOutTime"), TEXT("0.000000"));
PF->Add(TEXT("bLoop"), TEXT("False"));
PF->Add(TEXT("bRandomStartTime"), TEXT("False"));
PF->Add(TEXT("Space"), TEXT("CameraLocal"));
PF->Add(TEXT("CustomPlaySpace"), TEXT(""));
PF = &PC->Add(TEXT("StartFire"));
PF->Add(TEXT("FireModeNum"), TEXT("0"));
PF = &PC->Add(TEXT("ProjectWorldLocationToScreen"));
PF->Add(TEXT("bPlayerViewportRelative"), TEXT("False"));

PC = &ParamDefaultMetas.Add(TEXT("GameModeBase"));
PF = &PC->Add(TEXT("K2_FindPlayerStart"));
PF->Add(TEXT("IncomingName"), TEXT(""));

PC = &ParamDefaultMetas.Add(TEXT("Character"));
PF = &PC->Add(TEXT("UnCrouch"));
PF->Add(TEXT("bClientSimulation"), TEXT("False"));
PF = &PC->Add(TEXT("Crouch"));
PF->Add(TEXT("bClientSimulation"), TEXT("False"));
PF = &PC->Add(TEXT("StopAnimMontage"));
PF->Add(TEXT("AnimMontage"), TEXT("None"));
PF = &PC->Add(TEXT("PlayAnimMontage"));
PF->Add(TEXT("InPlayRate"), TEXT("1.000000"));
PF->Add(TEXT("StartSectionName"), TEXT("None"));

PC = &ParamDefaultMetas.Add(TEXT("MovementComponent"));
PF = &PC->Add(TEXT("K2_MoveUpdatedComponent"));
PF->Add(TEXT("bSweep"), TEXT("True"));
PF->Add(TEXT("bTeleport"), TEXT("False"));

PC = &ParamDefaultMetas.Add(TEXT("PhysicalAnimationComponent"));
PF = &PC->Add(TEXT("ApplyPhysicalAnimationProfileBelow"));
PF->Add(TEXT("bIncludeSelf"), TEXT("True"));
PF->Add(TEXT("bClearNotFound"), TEXT("False"));
PF = &PC->Add(TEXT("ApplyPhysicalAnimationSettingsBelow"));
PF->Add(TEXT("bIncludeSelf"), TEXT("True"));

PC = &ParamDefaultMetas.Add(TEXT("SceneComponent"));
PF = &PC->Add(TEXT("SetAbsolute"));
PF->Add(TEXT("bNewAbsoluteLocation"), TEXT("False"));
PF->Add(TEXT("bNewAbsoluteRotation"), TEXT("False"));
PF->Add(TEXT("bNewAbsoluteScale"), TEXT("False"));
PF = &PC->Add(TEXT("SetHiddenInGame"));
PF->Add(TEXT("bPropagateToChildren"), TEXT("False"));
PF = &PC->Add(TEXT("ToggleVisibility"));
PF->Add(TEXT("bPropagateToChildren"), TEXT("False"));
PF = &PC->Add(TEXT("SetVisibility"));
PF->Add(TEXT("bPropagateToChildren"), TEXT("False"));
PF = &PC->Add(TEXT("GetSocketTransform"));
PF->Add(TEXT("TransformSpace"), TEXT("RTS_World"));
PF = &PC->Add(TEXT("K2_DetachFromComponent"));
PF->Add(TEXT("LocationRule"), TEXT("KeepRelative"));
PF->Add(TEXT("RotationRule"), TEXT("KeepRelative"));
PF->Add(TEXT("ScaleRule"), TEXT("KeepRelative"));
PF->Add(TEXT("bCallModify"), TEXT("True"));
PF = &PC->Add(TEXT("DetachFromParent"));
PF->Add(TEXT("bMaintainWorldPosition"), TEXT("False"));
PF->Add(TEXT("bCallModify"), TEXT("True"));
PF = &PC->Add(TEXT("SnapTo"));
PF->Add(TEXT("InSocketName"), TEXT("None"));
PF = &PC->Add(TEXT("K2_AttachTo"));
PF->Add(TEXT("InSocketName"), TEXT("None"));
PF->Add(TEXT("AttachType"), TEXT("KeepRelativeOffset"));
PF->Add(TEXT("bWeldSimulatedBodies"), TEXT("True"));
PF = &PC->Add(TEXT("IsSimulatingPhysics"));
PF->Add(TEXT("BoneName"), TEXT("None"));

PC = &ParamDefaultMetas.Add(TEXT("TimelineComponent"));
PF = &PC->Add(TEXT("SetPlaybackPosition"));
PF->Add(TEXT("bFireUpdate"), TEXT("True"));

PC = &ParamDefaultMetas.Add(TEXT("InterpToMovementComponent"));
PF = &PC->Add(TEXT("RestartMovement"));
PF->Add(TEXT("InitialDirection"), TEXT("1.000000"));
PF = &PC->Add(TEXT("AddControlPointPosition"));
PF->Add(TEXT("bPositionIsRelative"), TEXT("True"));

PC = &ParamDefaultMetas.Add(TEXT("PawnMovementComponent"));
PF = &PC->Add(TEXT("AddInputVector"));
PF->Add(TEXT("bForce"), TEXT("False"));

PC = &ParamDefaultMetas.Add(TEXT("CharacterMovementComponent"));
PF = &PC->Add(TEXT("AddImpulse"));
PF->Add(TEXT("bVelocityChange"), TEXT("False"));
PF = &PC->Add(TEXT("SetMovementMode"));
PF->Add(TEXT("NewCustomMode"), TEXT("0"));

PC = &ParamDefaultMetas.Add(TEXT("AudioComponent"));
PF = &PC->Add(TEXT("AdjustVolume"));
PF->Add(TEXT("FadeCurve"), TEXT("Linear"));
PF = &PC->Add(TEXT("PlayQuantized"));
PF->Add(TEXT("InStartTime"), TEXT("0.000000"));
PF->Add(TEXT("InFadeInDuration"), TEXT("0.000000"));
PF->Add(TEXT("InFadeVolumeLevel"), TEXT("1.000000"));
PF->Add(TEXT("InFadeCurve"), TEXT("Linear"));
PF = &PC->Add(TEXT("Play"));
PF->Add(TEXT("StartTime"), TEXT("0.000000"));
PF = &PC->Add(TEXT("FadeOut"));
PF->Add(TEXT("FadeCurve"), TEXT("Linear"));
PF = &PC->Add(TEXT("FadeIn"));
PF->Add(TEXT("FadeVolumeLevel"), TEXT("1.000000"));
PF->Add(TEXT("StartTime"), TEXT("0.000000"));
PF->Add(TEXT("FadeCurve"), TEXT("Linear"));

PC = &ParamDefaultMetas.Add(TEXT("CameraComponent"));
PF = &PC->Add(TEXT("AddOrUpdateBlendable"));
PF->Add(TEXT("InWeight"), TEXT("1.000000"));

PC = &ParamDefaultMetas.Add(TEXT("CameraShakeSourceComponent"));
PF = &PC->Add(TEXT("StopAllCameraShakes"));
PF->Add(TEXT("bImmediately"), TEXT("True"));
PF = &PC->Add(TEXT("StopAllCameraShakesOfType"));
PF->Add(TEXT("bImmediately"), TEXT("True"));
PF = &PC->Add(TEXT("StartCameraShake"));
PF->Add(TEXT("Scale"), TEXT("1.000000"));
PF->Add(TEXT("PlaySpace"), TEXT("CameraLocal"));
PF->Add(TEXT("UserPlaySpaceRot"), TEXT(""));

PC = &ParamDefaultMetas.Add(TEXT("DecalComponent"));
PF = &PC->Add(TEXT("SetFadeOut"));
PF->Add(TEXT("DestroyOwnerAfterFade"), TEXT("True"));

PC = &ParamDefaultMetas.Add(TEXT("ForceFeedbackComponent"));
PF = &PC->Add(TEXT("Play"));
PF->Add(TEXT("StartTime"), TEXT("0.000000"));

PC = &ParamDefaultMetas.Add(TEXT("PostProcessComponent"));
PF = &PC->Add(TEXT("AddOrUpdateBlendable"));
PF->Add(TEXT("InWeight"), TEXT("1.000000"));

PC = &ParamDefaultMetas.Add(TEXT("PrimitiveComponent"));
PF = &PC->Add(TEXT("SetUseCCD"));
PF->Add(TEXT("BoneName"), TEXT("None"));
PF = &PC->Add(TEXT("ScaleByMomentOfInertia"));
PF->Add(TEXT("BoneName"), TEXT("None"));
PF = &PC->Add(TEXT("GetInertiaTensor"));
PF->Add(TEXT("BoneName"), TEXT("None"));
PF = &PC->Add(TEXT("SetMassOverrideInKg"));
PF->Add(TEXT("BoneName"), TEXT("None"));
PF->Add(TEXT("MassInKg"), TEXT("1.000000"));
PF->Add(TEXT("bOverrideMass"), TEXT("True"));
PF = &PC->Add(TEXT("SetAllMassScale"));
PF->Add(TEXT("InMassScale"), TEXT("1.000000"));
PF = &PC->Add(TEXT("GetMassScale"));
PF->Add(TEXT("BoneName"), TEXT("None"));
PF = &PC->Add(TEXT("SetMassScale"));
PF->Add(TEXT("BoneName"), TEXT("None"));
PF->Add(TEXT("InMassScale"), TEXT("1.000000"));
PF = &PC->Add(TEXT("SetAllPhysicsAngularVelocityInRadians"));
PF->Add(TEXT("bAddToCurrent"), TEXT("False"));
PF = &PC->Add(TEXT("SetAllPhysicsAngularVelocityInDegrees"));
PF->Add(TEXT("bAddToCurrent"), TEXT("False"));
PF = &PC->Add(TEXT("GetClosestPointOnCollision"));
PF->Add(TEXT("BoneName"), TEXT("None"));
PF = &PC->Add(TEXT("SetCollisionProfileName"));
PF->Add(TEXT("bUpdateOverlaps"), TEXT("True"));
PF = &PC->Add(TEXT("PutRigidBodyToSleep"));
PF->Add(TEXT("BoneName"), TEXT("None"));
PF = &PC->Add(TEXT("WakeRigidBody"));
PF->Add(TEXT("BoneName"), TEXT("None"));
PF = &PC->Add(TEXT("SetCenterOfMass"));
PF->Add(TEXT("BoneName"), TEXT("None"));
PF = &PC->Add(TEXT("GetCenterOfMass"));
PF->Add(TEXT("BoneName"), TEXT("None"));
PF = &PC->Add(TEXT("GetPhysicsAngularVelocityInRadians"));
PF->Add(TEXT("BoneName"), TEXT("None"));
PF = &PC->Add(TEXT("GetPhysicsAngularVelocityInDegrees"));
PF->Add(TEXT("BoneName"), TEXT("None"));
PF = &PC->Add(TEXT("GetPhysicsAngularVelocity"));
PF->Add(TEXT("BoneName"), TEXT("None"));
PF = &PC->Add(TEXT("SetPhysicsMaxAngularVelocityInRadians"));
PF->Add(TEXT("bAddToCurrent"), TEXT("False"));
PF->Add(TEXT("BoneName"), TEXT("None"));
PF = &PC->Add(TEXT("SetPhysicsMaxAngularVelocityInDegrees"));
PF->Add(TEXT("bAddToCurrent"), TEXT("False"));
PF->Add(TEXT("BoneName"), TEXT("None"));
PF = &PC->Add(TEXT("SetPhysicsMaxAngularVelocity"));
PF->Add(TEXT("bAddToCurrent"), TEXT("False"));
PF->Add(TEXT("BoneName"), TEXT("None"));
PF = &PC->Add(TEXT("SetPhysicsAngularVelocityInDegrees"));
PF->Add(TEXT("bAddToCurrent"), TEXT("False"));
PF->Add(TEXT("BoneName"), TEXT("None"));
PF = &PC->Add(TEXT("SetPhysicsAngularVelocityInRadians"));
PF->Add(TEXT("bAddToCurrent"), TEXT("False"));
PF->Add(TEXT("BoneName"), TEXT("None"));
PF = &PC->Add(TEXT("SetPhysicsAngularVelocity"));
PF->Add(TEXT("bAddToCurrent"), TEXT("False"));
PF->Add(TEXT("BoneName"), TEXT("None"));
PF = &PC->Add(TEXT("SetAllPhysicsLinearVelocity"));
PF->Add(TEXT("bAddToCurrent"), TEXT("False"));
PF = &PC->Add(TEXT("GetPhysicsLinearVelocityAtPoint"));
PF->Add(TEXT("BoneName"), TEXT("None"));
PF = &PC->Add(TEXT("GetPhysicsLinearVelocity"));
PF->Add(TEXT("BoneName"), TEXT("None"));
PF = &PC->Add(TEXT("SetPhysicsLinearVelocity"));
PF->Add(TEXT("bAddToCurrent"), TEXT("False"));
PF->Add(TEXT("BoneName"), TEXT("None"));
PF = &PC->Add(TEXT("AddTorqueInDegrees"));
PF->Add(TEXT("BoneName"), TEXT("None"));
PF->Add(TEXT("bAccelChange"), TEXT("False"));
PF = &PC->Add(TEXT("AddTorqueInRadians"));
PF->Add(TEXT("BoneName"), TEXT("None"));
PF->Add(TEXT("bAccelChange"), TEXT("False"));
PF = &PC->Add(TEXT("AddTorque"));
PF->Add(TEXT("BoneName"), TEXT("None"));
PF->Add(TEXT("bAccelChange"), TEXT("False"));
PF = &PC->Add(TEXT("AddRadialForce"));
PF->Add(TEXT("bAccelChange"), TEXT("False"));
PF = &PC->Add(TEXT("AddForceAtLocationLocal"));
PF->Add(TEXT("BoneName"), TEXT("None"));
PF = &PC->Add(TEXT("AddForceAtLocation"));
PF->Add(TEXT("BoneName"), TEXT("None"));
PF = &PC->Add(TEXT("AddForce"));
PF->Add(TEXT("BoneName"), TEXT("None"));
PF->Add(TEXT("bAccelChange"), TEXT("False"));
PF = &PC->Add(TEXT("AddRadialImpulse"));
PF->Add(TEXT("bVelChange"), TEXT("False"));
PF = &PC->Add(TEXT("AddImpulseAtLocation"));
PF->Add(TEXT("BoneName"), TEXT("None"));
PF = &PC->Add(TEXT("AddAngularImpulseInDegrees"));
PF->Add(TEXT("BoneName"), TEXT("None"));
PF->Add(TEXT("bVelChange"), TEXT("False"));
PF = &PC->Add(TEXT("AddAngularImpulseInRadians"));
PF->Add(TEXT("BoneName"), TEXT("None"));
PF->Add(TEXT("bVelChange"), TEXT("False"));
PF = &PC->Add(TEXT("AddAngularImpulse"));
PF->Add(TEXT("BoneName"), TEXT("None"));
PF->Add(TEXT("bVelChange"), TEXT("False"));
PF = &PC->Add(TEXT("AddImpulse"));
PF->Add(TEXT("BoneName"), TEXT("None"));
PF->Add(TEXT("bVelChange"), TEXT("False"));
PF = &PC->Add(TEXT("CreateDynamicMaterialInstance"));
PF->Add(TEXT("SourceMaterial"), TEXT("None"));
PF->Add(TEXT("OptionalName"), TEXT("None"));
PF = &PC->Add(TEXT("SetBoundsScale"));
PF->Add(TEXT("NewBoundsScale"), TEXT("1.000000"));
PF = &PC->Add(TEXT("GetOverlappingActors"));
PF->Add(TEXT("ClassFilter"), TEXT("None"));
PF = &PC->Add(TEXT("WasRecentlyRendered"));
PF->Add(TEXT("Tolerance"), TEXT("0.200000"));

PC = &ParamDefaultMetas.Add(TEXT("SceneCaptureComponent"));
PF = &PC->Add(TEXT("RemoveShowOnlyActorComponents"));
PF->Add(TEXT("bIncludeFromChildActors"), TEXT("False"));
PF = &PC->Add(TEXT("ShowOnlyActorComponents"));
PF->Add(TEXT("bIncludeFromChildActors"), TEXT("False"));
PF = &PC->Add(TEXT("HideActorComponents"));
PF->Add(TEXT("bIncludeFromChildActors"), TEXT("False"));

PC = &ParamDefaultMetas.Add(TEXT("LightComponent"));
PF = &PC->Add(TEXT("SetLightColor"));
PF->Add(TEXT("bSRGB"), TEXT("True"));

PC = &ParamDefaultMetas.Add(TEXT("LocalLightComponent"));
PF = &PC->Add(TEXT("GetUnitsConversionFactor"));
PF->Add(TEXT("CosHalfConeAngle"), TEXT("-1.000000"));

PC = &ParamDefaultMetas.Add(TEXT("MeshComponent"));
PF = &PC->Add(TEXT("PrestreamTextures"));
PF->Add(TEXT("CinematicTextureGroups"), TEXT("0"));

PC = &ParamDefaultMetas.Add(TEXT("SplineComponent"));
PF = &PC->Add(TEXT("FindTransformClosestToWorldLocation"));
PF->Add(TEXT("bUseScale"), TEXT("False"));
PF = &PC->Add(TEXT("GetScaleAtTime"));
PF->Add(TEXT("bUseConstantVelocity"), TEXT("False"));
PF = &PC->Add(TEXT("GetRollAtTime"));
PF->Add(TEXT("bUseConstantVelocity"), TEXT("False"));
PF = &PC->Add(TEXT("GetTransformAtTime"));
PF->Add(TEXT("bUseConstantVelocity"), TEXT("False"));
PF->Add(TEXT("bUseScale"), TEXT("False"));
PF = &PC->Add(TEXT("GetRightVectorAtTime"));
PF->Add(TEXT("bUseConstantVelocity"), TEXT("False"));
PF = &PC->Add(TEXT("GetUpVectorAtTime"));
PF->Add(TEXT("bUseConstantVelocity"), TEXT("False"));
PF = &PC->Add(TEXT("GetWorldRotationAtTime"));
PF->Add(TEXT("bUseConstantVelocity"), TEXT("False"));
PF = &PC->Add(TEXT("GetRotationAtTime"));
PF->Add(TEXT("bUseConstantVelocity"), TEXT("False"));
PF = &PC->Add(TEXT("GetTangentAtTime"));
PF->Add(TEXT("bUseConstantVelocity"), TEXT("False"));
PF = &PC->Add(TEXT("GetWorldDirectionAtTime"));
PF->Add(TEXT("bUseConstantVelocity"), TEXT("False"));
PF = &PC->Add(TEXT("GetDirectionAtTime"));
PF->Add(TEXT("bUseConstantVelocity"), TEXT("False"));
PF = &PC->Add(TEXT("GetWorldLocationAtTime"));
PF->Add(TEXT("bUseConstantVelocity"), TEXT("False"));
PF = &PC->Add(TEXT("GetLocationAtTime"));
PF->Add(TEXT("bUseConstantVelocity"), TEXT("False"));
PF = &PC->Add(TEXT("GetTransformAtDistanceAlongSpline"));
PF->Add(TEXT("bUseScale"), TEXT("False"));
PF = &PC->Add(TEXT("GetTransformAtSplinePoint"));
PF->Add(TEXT("bUseScale"), TEXT("False"));
PF = &PC->Add(TEXT("SetSplinePointType"));
PF->Add(TEXT("bUpdateSpline"), TEXT("True"));
PF = &PC->Add(TEXT("SetScaleAtSplinePoint"));
PF->Add(TEXT("bUpdateSpline"), TEXT("True"));
PF = &PC->Add(TEXT("SetRotationAtSplinePoint"));
PF->Add(TEXT("bUpdateSpline"), TEXT("True"));
PF = &PC->Add(TEXT("SetUpVectorAtSplinePoint"));
PF->Add(TEXT("bUpdateSpline"), TEXT("True"));
PF = &PC->Add(TEXT("SetTangentsAtSplinePoint"));
PF->Add(TEXT("bUpdateSpline"), TEXT("True"));
PF = &PC->Add(TEXT("SetTangentAtSplinePoint"));
PF->Add(TEXT("bUpdateSpline"), TEXT("True"));
PF = &PC->Add(TEXT("SetLocationAtSplinePoint"));
PF->Add(TEXT("bUpdateSpline"), TEXT("True"));
PF = &PC->Add(TEXT("SetSplinePoints"));
PF->Add(TEXT("bUpdateSpline"), TEXT("True"));
PF = &PC->Add(TEXT("RemoveSplinePoint"));
PF->Add(TEXT("bUpdateSpline"), TEXT("True"));
PF = &PC->Add(TEXT("AddSplinePointAtIndex"));
PF->Add(TEXT("bUpdateSpline"), TEXT("True"));
PF = &PC->Add(TEXT("AddSplinePoint"));
PF->Add(TEXT("bUpdateSpline"), TEXT("True"));
PF = &PC->Add(TEXT("AddPoints"));
PF->Add(TEXT("bUpdateSpline"), TEXT("True"));
PF = &PC->Add(TEXT("AddPoint"));
PF->Add(TEXT("bUpdateSpline"), TEXT("True"));
PF = &PC->Add(TEXT("ClearSplinePoints"));
PF->Add(TEXT("bUpdateSpline"), TEXT("True"));
PF = &PC->Add(TEXT("SetClosedLoopAtPosition"));
PF->Add(TEXT("bUpdateSpline"), TEXT("True"));
PF = &PC->Add(TEXT("SetClosedLoop"));
PF->Add(TEXT("bUpdateSpline"), TEXT("True"));
PF = &PC->Add(TEXT("GetTransformAtSplineInputKey"));
PF->Add(TEXT("bUseScale"), TEXT("False"));

PC = &ParamDefaultMetas.Add(TEXT("ParticleSystemComponent"));
PF = &PC->Add(TEXT("CreateNamedDynamicMaterialInstance"));
PF->Add(TEXT("SourceMaterial"), TEXT("None"));
PF = &PC->Add(TEXT("SetAutoAttachParams"));
PF->Add(TEXT("SocketName"), TEXT("None"));
PF->Add(TEXT("LocationType"), TEXT("KeepRelativeOffset"));

PC = &ParamDefaultMetas.Add(TEXT("SkinnedMeshComponent"));
PF = &PC->Add(TEXT("FindClosestBone_K2"));
PF->Add(TEXT("IgnoreScale"), TEXT("0.000000"));
PF->Add(TEXT("bRequirePhysicsAsset"), TEXT("False"));
PF = &PC->Add(TEXT("SetMasterPoseComponent"));
PF->Add(TEXT("bForceUpdate"), TEXT("False"));
PF = &PC->Add(TEXT("GetDeltaTransformFromRefPose"));
PF->Add(TEXT("BaseName"), TEXT("None"));
PF = &PC->Add(TEXT("SetSkeletalMesh"));
PF->Add(TEXT("bReinitPose"), TEXT("True"));
PF = &PC->Add(TEXT("SetPhysicsAsset"));
PF->Add(TEXT("bForceReInit"), TEXT("False"));

PC = &ParamDefaultMetas.Add(TEXT("SkeletalMeshComponent"));
PF = &PC->Add(TEXT("SetConstraintProfileForAll"));
PF->Add(TEXT("bDefaultIfNotFound"), TEXT("False"));
PF = &PC->Add(TEXT("SetConstraintProfile"));
PF->Add(TEXT("bDefaultIfNotFound"), TEXT("False"));
PF = &PC->Add(TEXT("SetAllMotorsAngularDriveParams"));
PF->Add(TEXT("bSkipCustomPhysicsType"), TEXT("False"));
PF = &PC->Add(TEXT("SetAllMotorsAngularVelocityDrive"));
PF->Add(TEXT("bSkipCustomPhysicsType"), TEXT("False"));
PF = &PC->Add(TEXT("SetAllMotorsAngularPositionDrive"));
PF->Add(TEXT("bSkipCustomPhysicsType"), TEXT("False"));
PF = &PC->Add(TEXT("AccumulateAllBodiesBelowPhysicsBlendWeight"));
PF->Add(TEXT("bSkipCustomPhysicsType"), TEXT("False"));
PF = &PC->Add(TEXT("SetAllBodiesBelowPhysicsBlendWeight"));
PF->Add(TEXT("bSkipCustomPhysicsType"), TEXT("False"));
PF->Add(TEXT("bIncludeSelf"), TEXT("True"));
PF = &PC->Add(TEXT("SetAllBodiesPhysicsBlendWeight"));
PF->Add(TEXT("bSkipCustomPhysicsType"), TEXT("False"));
PF = &PC->Add(TEXT("SetAllBodiesBelowSimulatePhysics"));
PF->Add(TEXT("bIncludeSelf"), TEXT("True"));
PF = &PC->Add(TEXT("AddImpulseToAllBodiesBelow"));
PF->Add(TEXT("BoneName"), TEXT("None"));
PF->Add(TEXT("bVelChange"), TEXT("False"));
PF->Add(TEXT("bIncludeSelf"), TEXT("True"));
PF = &PC->Add(TEXT("AddForceToAllBodiesBelow"));
PF->Add(TEXT("BoneName"), TEXT("None"));
PF->Add(TEXT("bAccelChange"), TEXT("False"));
PF->Add(TEXT("bIncludeSelf"), TEXT("True"));
PF = &PC->Add(TEXT("GetBoneMass"));
PF->Add(TEXT("BoneName"), TEXT("None"));
PF->Add(TEXT("bScaleMass"), TEXT("True"));
PF = &PC->Add(TEXT("SetEnableGravityOnAllBodiesBelow"));
PF->Add(TEXT("bIncludeSelf"), TEXT("True"));
PF = &PC->Add(TEXT("SetNotifyRigidBodyCollisionBelow"));
PF->Add(TEXT("BoneName"), TEXT("None"));
PF->Add(TEXT("bIncludeSelf"), TEXT("True"));
PF = &PC->Add(TEXT("SetBodyNotifyRigidBodyCollision"));
PF->Add(TEXT("BoneName"), TEXT("None"));
PF = &PC->Add(TEXT("SetAllowRigidBodyAnimNode"));
PF->Add(TEXT("bReinitAnim"), TEXT("True"));
PF = &PC->Add(TEXT("UnbindClothFromMasterPoseComponent"));
PF->Add(TEXT("bRestoreSimulationSpace"), TEXT("True"));
PF = &PC->Add(TEXT("SetMorphTarget"));
PF->Add(TEXT("bRemoveZeroWeight"), TEXT("True"));
PF = &PC->Add(TEXT("OverrideAnimationData"));
PF->Add(TEXT("bIsLooping"), TEXT("True"));
PF->Add(TEXT("bIsPlaying"), TEXT("True"));
PF->Add(TEXT("Position"), TEXT("0.000000"));
PF->Add(TEXT("PlayRate"), TEXT("1.000000"));
PF = &PC->Add(TEXT("SetPosition"));
PF->Add(TEXT("bFireNotifies"), TEXT("True"));
PF = &PC->Add(TEXT("ResetAnimInstanceDynamics"));
PF->Add(TEXT("InTeleportType"), TEXT("ResetPhysics"));
PF = &PC->Add(TEXT("GetStringAttribute"));
PF->Add(TEXT("LookupType"), TEXT("BoneOnly"));
PF = &PC->Add(TEXT("GetIntegerAttribute"));
PF->Add(TEXT("LookupType"), TEXT("BoneOnly"));
PF = &PC->Add(TEXT("GetFloatAttribute"));
PF->Add(TEXT("LookupType"), TEXT("BoneOnly"));
PF = &PC->Add(TEXT("GetStringAttribute_Ref"));
PF->Add(TEXT("LookupType"), TEXT("BoneOnly"));
PF = &PC->Add(TEXT("GetIntegerAttribute_Ref"));
PF->Add(TEXT("LookupType"), TEXT("BoneOnly"));
PF = &PC->Add(TEXT("GetFloatAttribute_Ref"));
PF->Add(TEXT("LookupType"), TEXT("BoneOnly"));

PC = &ParamDefaultMetas.Add(TEXT("InstancedStaticMeshComponent"));
PF = &PC->Add(TEXT("GetInstancesOverlappingBox"));
PF->Add(TEXT("bBoxInWorldSpace"), TEXT("True"));
PF = &PC->Add(TEXT("GetInstancesOverlappingSphere"));
PF->Add(TEXT("bSphereInWorldSpace"), TEXT("True"));
PF = &PC->Add(TEXT("BatchUpdateInstancesTransform"));
PF->Add(TEXT("bWorldSpace"), TEXT("False"));
PF->Add(TEXT("bMarkRenderStateDirty"), TEXT("False"));
PF->Add(TEXT("bTeleport"), TEXT("False"));
PF = &PC->Add(TEXT("BatchUpdateInstancesTransforms"));
PF->Add(TEXT("bWorldSpace"), TEXT("False"));
PF->Add(TEXT("bMarkRenderStateDirty"), TEXT("False"));
PF->Add(TEXT("bTeleport"), TEXT("False"));
PF = &PC->Add(TEXT("UpdateInstanceTransform"));
PF->Add(TEXT("bWorldSpace"), TEXT("False"));
PF->Add(TEXT("bMarkRenderStateDirty"), TEXT("False"));
PF->Add(TEXT("bTeleport"), TEXT("False"));
PF = &PC->Add(TEXT("GetInstanceTransform"));
PF->Add(TEXT("bWorldSpace"), TEXT("False"));
PF = &PC->Add(TEXT("SetCustomDataValue"));
PF->Add(TEXT("bMarkRenderStateDirty"), TEXT("False"));

PC = &ParamDefaultMetas.Add(TEXT("SplineMeshComponent"));
PF = &PC->Add(TEXT("SetBoundaryMax"));
PF->Add(TEXT("bUpdateMesh"), TEXT("True"));
PF = &PC->Add(TEXT("SetBoundaryMin"));
PF->Add(TEXT("bUpdateMesh"), TEXT("True"));
PF = &PC->Add(TEXT("SetSplineUpDir"));
PF->Add(TEXT("bUpdateMesh"), TEXT("True"));
PF = &PC->Add(TEXT("SetForwardAxis"));
PF->Add(TEXT("bUpdateMesh"), TEXT("True"));
PF = &PC->Add(TEXT("SetEndOffset"));
PF->Add(TEXT("bUpdateMesh"), TEXT("True"));
PF = &PC->Add(TEXT("SetEndRoll"));
PF->Add(TEXT("bUpdateMesh"), TEXT("True"));
PF = &PC->Add(TEXT("SetEndScale"));
PF->Add(TEXT("EndScale"), TEXT("(X=1.000,Y=1.000)"));
PF->Add(TEXT("bUpdateMesh"), TEXT("True"));
PF = &PC->Add(TEXT("SetStartOffset"));
PF->Add(TEXT("bUpdateMesh"), TEXT("True"));
PF = &PC->Add(TEXT("SetStartRoll"));
PF->Add(TEXT("bUpdateMesh"), TEXT("True"));
PF = &PC->Add(TEXT("SetStartScale"));
PF->Add(TEXT("StartScale"), TEXT("(X=1.000,Y=1.000)"));
PF->Add(TEXT("bUpdateMesh"), TEXT("True"));
PF = &PC->Add(TEXT("SetStartAndEnd"));
PF->Add(TEXT("bUpdateMesh"), TEXT("True"));
PF = &PC->Add(TEXT("SetEndTangent"));
PF->Add(TEXT("bUpdateMesh"), TEXT("True"));
PF = &PC->Add(TEXT("SetEndPosition"));
PF->Add(TEXT("bUpdateMesh"), TEXT("True"));
PF = &PC->Add(TEXT("SetStartTangent"));
PF->Add(TEXT("bUpdateMesh"), TEXT("True"));
PF = &PC->Add(TEXT("SetStartPosition"));
PF->Add(TEXT("bUpdateMesh"), TEXT("True"));

PC = &ParamDefaultMetas.Add(TEXT("BoxComponent"));
PF = &PC->Add(TEXT("SetBoxExtent"));
PF->Add(TEXT("bUpdateOverlaps"), TEXT("True"));

PC = &ParamDefaultMetas.Add(TEXT("CapsuleComponent"));
PF = &PC->Add(TEXT("SetCapsuleHalfHeight"));
PF->Add(TEXT("bUpdateOverlaps"), TEXT("True"));
PF = &PC->Add(TEXT("SetCapsuleRadius"));
PF->Add(TEXT("bUpdateOverlaps"), TEXT("True"));
PF = &PC->Add(TEXT("SetCapsuleSize"));
PF->Add(TEXT("bUpdateOverlaps"), TEXT("True"));

PC = &ParamDefaultMetas.Add(TEXT("SphereComponent"));
PF = &PC->Add(TEXT("SetSphereRadius"));
PF->Add(TEXT("bUpdateOverlaps"), TEXT("True"));

PC = &ParamDefaultMetas.Add(TEXT("SceneCaptureComponent2D"));
PF = &PC->Add(TEXT("AddOrUpdateBlendable"));
PF->Add(TEXT("InWeight"), TEXT("1.000000"));

PC = &ParamDefaultMetas.Add(TEXT("AnimSingleNodeInstance"));
PF = &PC->Add(TEXT("SetAnimationAsset"));
PF->Add(TEXT("bIsLooping"), TEXT("True"));
PF->Add(TEXT("InPlayRate"), TEXT("1.000000"));
PF = &PC->Add(TEXT("PlayAnim"));
PF->Add(TEXT("bIsLooping"), TEXT("False"));
PF->Add(TEXT("InPlayRate"), TEXT("1.000000"));
PF->Add(TEXT("InStartPosition"), TEXT("0.000000"));
PF = &PC->Add(TEXT("SetPositionWithPreviousTime"));
PF->Add(TEXT("bFireNotifies"), TEXT("True"));
PF = &PC->Add(TEXT("SetPosition"));
PF->Add(TEXT("bFireNotifies"), TEXT("True"));

PC = &ParamDefaultMetas.Add(TEXT("BlueprintPathsLibrary"));
PF = &PC->Add(TEXT("MakeValidFileName"));
PF->Add(TEXT("InReplacementChar"), TEXT(""));
PF = &PC->Add(TEXT("CreateTempFilename"));
PF->Add(TEXT("Prefix"), TEXT(""));
PF->Add(TEXT("Extension"), TEXT(".tmp"));
PF = &PC->Add(TEXT("ConvertRelativePathToFull"));
PF->Add(TEXT("InBasePath"), TEXT(""));
PF = &PC->Add(TEXT("GetBaseFilename"));
PF->Add(TEXT("bRemovePath"), TEXT("True"));
PF = &PC->Add(TEXT("GetExtension"));
PF->Add(TEXT("bIncludeDot"), TEXT("False"));

PC = &ParamDefaultMetas.Add(TEXT("DataTableFunctionLibrary"));
PF = &PC->Add(TEXT("FillDataTableFromJSONFile"));
PF->Add(TEXT("ImportRowStruct"), TEXT("None"));

PC = &ParamDefaultMetas.Add(TEXT("GameplayStatics"));
PF = &PC->Add(TEXT("ProjectWorldToScreen"));
PF->Add(TEXT("bPlayerViewportRelative"), TEXT("False"));
PF = &PC->Add(TEXT("SuggestProjectileVelocity_CustomArc"));
PF->Add(TEXT("OverrideGravityZ"), TEXT("0.000000"));
PF->Add(TEXT("ArcParam"), TEXT("0.500000"));
PF = &PC->Add(TEXT("Blueprint_PredictProjectilePath_ByTraceChannel"));
PF->Add(TEXT("SimFrequency"), TEXT("15.000000"));
PF->Add(TEXT("MaxSimTime"), TEXT("2.000000"));
PF->Add(TEXT("OverrideGravityZ"), TEXT("0.000000"));
PF = &PC->Add(TEXT("Blueprint_PredictProjectilePath_ByObjectType"));
PF->Add(TEXT("SimFrequency"), TEXT("15.000000"));
PF->Add(TEXT("MaxSimTime"), TEXT("2.000000"));
PF->Add(TEXT("OverrideGravityZ"), TEXT("0.000000"));
PF = &PC->Add(TEXT("SpawnDecalAttached"));
PF->Add(TEXT("AttachPointName"), TEXT("None"));
PF->Add(TEXT("Location"), TEXT(""));
PF->Add(TEXT("Rotation"), TEXT(""));
PF->Add(TEXT("LocationType"), TEXT("KeepRelativeOffset"));
PF->Add(TEXT("LifeSpan"), TEXT("0.000000"));
PF = &PC->Add(TEXT("SpawnDecalAtLocation"));
PF->Add(TEXT("Rotation"), TEXT("-90.000000,0.000000,0.000000"));
PF->Add(TEXT("LifeSpan"), TEXT("0.000000"));
PF = &PC->Add(TEXT("ActivateReverbEffect"));
PF->Add(TEXT("Priority"), TEXT("0.000000"));
PF->Add(TEXT("Volume"), TEXT("0.500000"));
PF->Add(TEXT("FadeTime"), TEXT("2.000000"));
PF = &PC->Add(TEXT("ClearSoundMixClassOverride"));
PF->Add(TEXT("FadeOutTime"), TEXT("1.000000"));
PF = &PC->Add(TEXT("SetSoundMixClassOverride"));
PF->Add(TEXT("Volume"), TEXT("1.000000"));
PF->Add(TEXT("Pitch"), TEXT("1.000000"));
PF->Add(TEXT("FadeInTime"), TEXT("1.000000"));
PF->Add(TEXT("bApplyToChildren"), TEXT("True"));
PF = &PC->Add(TEXT("SpawnForceFeedbackAttached"));
PF->Add(TEXT("AttachPointName"), TEXT("None"));
PF->Add(TEXT("Location"), TEXT(""));
PF->Add(TEXT("Rotation"), TEXT(""));
PF->Add(TEXT("LocationType"), TEXT("KeepRelativeOffset"));
PF->Add(TEXT("bStopWhenAttachedToDestroyed"), TEXT("False"));
PF->Add(TEXT("bLooping"), TEXT("False"));
PF->Add(TEXT("IntensityMultiplier"), TEXT("1.000000"));
PF->Add(TEXT("StartTime"), TEXT("0.000000"));
PF->Add(TEXT("AttenuationSettings"), TEXT("None"));
PF->Add(TEXT("bAutoDestroy"), TEXT("True"));
PF = &PC->Add(TEXT("SpawnForceFeedbackAtLocation"));
PF->Add(TEXT("Rotation"), TEXT(""));
PF->Add(TEXT("bLooping"), TEXT("False"));
PF->Add(TEXT("IntensityMultiplier"), TEXT("1.000000"));
PF->Add(TEXT("StartTime"), TEXT("0.000000"));
PF->Add(TEXT("AttenuationSettings"), TEXT("None"));
PF->Add(TEXT("bAutoDestroy"), TEXT("True"));
PF = &PC->Add(TEXT("SpawnDialogueAttached"));
PF->Add(TEXT("AttachPointName"), TEXT("None"));
PF->Add(TEXT("Location"), TEXT(""));
PF->Add(TEXT("Rotation"), TEXT(""));
PF->Add(TEXT("LocationType"), TEXT("KeepRelativeOffset"));
PF->Add(TEXT("bStopWhenAttachedToDestroyed"), TEXT("False"));
PF->Add(TEXT("VolumeMultiplier"), TEXT("1.000000"));
PF->Add(TEXT("PitchMultiplier"), TEXT("1.000000"));
PF->Add(TEXT("StartTime"), TEXT("0.000000"));
PF->Add(TEXT("AttenuationSettings"), TEXT("None"));
PF->Add(TEXT("bAutoDestroy"), TEXT("True"));
PF = &PC->Add(TEXT("SpawnDialogueAtLocation"));
PF->Add(TEXT("Rotation"), TEXT(""));
PF->Add(TEXT("VolumeMultiplier"), TEXT("1.000000"));
PF->Add(TEXT("PitchMultiplier"), TEXT("1.000000"));
PF->Add(TEXT("StartTime"), TEXT("0.000000"));
PF->Add(TEXT("AttenuationSettings"), TEXT("None"));
PF->Add(TEXT("bAutoDestroy"), TEXT("True"));
PF = &PC->Add(TEXT("PlayDialogueAtLocation"));
PF->Add(TEXT("VolumeMultiplier"), TEXT("1.000000"));
PF->Add(TEXT("PitchMultiplier"), TEXT("1.000000"));
PF->Add(TEXT("StartTime"), TEXT("0.000000"));
PF->Add(TEXT("AttenuationSettings"), TEXT("None"));
PF = &PC->Add(TEXT("SpawnDialogue2D"));
PF->Add(TEXT("VolumeMultiplier"), TEXT("1.000000"));
PF->Add(TEXT("PitchMultiplier"), TEXT("1.000000"));
PF->Add(TEXT("StartTime"), TEXT("0.000000"));
PF->Add(TEXT("bAutoDestroy"), TEXT("True"));
PF = &PC->Add(TEXT("PlayDialogue2D"));
PF->Add(TEXT("VolumeMultiplier"), TEXT("1.000000"));
PF->Add(TEXT("PitchMultiplier"), TEXT("1.000000"));
PF->Add(TEXT("StartTime"), TEXT("0.000000"));
PF = &PC->Add(TEXT("SpawnSoundAttached"));
PF->Add(TEXT("AttachPointName"), TEXT("None"));
PF->Add(TEXT("Location"), TEXT(""));
PF->Add(TEXT("Rotation"), TEXT(""));
PF->Add(TEXT("LocationType"), TEXT("KeepRelativeOffset"));
PF->Add(TEXT("bStopWhenAttachedToDestroyed"), TEXT("False"));
PF->Add(TEXT("VolumeMultiplier"), TEXT("1.000000"));
PF->Add(TEXT("PitchMultiplier"), TEXT("1.000000"));
PF->Add(TEXT("StartTime"), TEXT("0.000000"));
PF->Add(TEXT("AttenuationSettings"), TEXT("None"));
PF->Add(TEXT("ConcurrencySettings"), TEXT("None"));
PF->Add(TEXT("bAutoDestroy"), TEXT("True"));
PF = &PC->Add(TEXT("SpawnSoundAtLocation"));
PF->Add(TEXT("Rotation"), TEXT(""));
PF->Add(TEXT("VolumeMultiplier"), TEXT("1.000000"));
PF->Add(TEXT("PitchMultiplier"), TEXT("1.000000"));
PF->Add(TEXT("StartTime"), TEXT("0.000000"));
PF->Add(TEXT("AttenuationSettings"), TEXT("None"));
PF->Add(TEXT("ConcurrencySettings"), TEXT("None"));
PF->Add(TEXT("bAutoDestroy"), TEXT("True"));
PF = &PC->Add(TEXT("PlaySoundAtLocation"));
PF->Add(TEXT("VolumeMultiplier"), TEXT("1.000000"));
PF->Add(TEXT("PitchMultiplier"), TEXT("1.000000"));
PF->Add(TEXT("StartTime"), TEXT("0.000000"));
PF->Add(TEXT("AttenuationSettings"), TEXT("None"));
PF->Add(TEXT("ConcurrencySettings"), TEXT("None"));
PF->Add(TEXT("OwningActor"), TEXT("None"));
PF = &PC->Add(TEXT("CreateSound2D"));
PF->Add(TEXT("VolumeMultiplier"), TEXT("1.000000"));
PF->Add(TEXT("PitchMultiplier"), TEXT("1.000000"));
PF->Add(TEXT("StartTime"), TEXT("0.000000"));
PF->Add(TEXT("ConcurrencySettings"), TEXT("None"));
PF->Add(TEXT("bPersistAcrossLevelTransition"), TEXT("False"));
PF->Add(TEXT("bAutoDestroy"), TEXT("True"));
PF = &PC->Add(TEXT("SpawnSound2D"));
PF->Add(TEXT("VolumeMultiplier"), TEXT("1.000000"));
PF->Add(TEXT("PitchMultiplier"), TEXT("1.000000"));
PF->Add(TEXT("StartTime"), TEXT("0.000000"));
PF->Add(TEXT("ConcurrencySettings"), TEXT("None"));
PF->Add(TEXT("bPersistAcrossLevelTransition"), TEXT("False"));
PF->Add(TEXT("bAutoDestroy"), TEXT("True"));
PF = &PC->Add(TEXT("PlaySound2D"));
PF->Add(TEXT("VolumeMultiplier"), TEXT("1.000000"));
PF->Add(TEXT("PitchMultiplier"), TEXT("1.000000"));
PF->Add(TEXT("StartTime"), TEXT("0.000000"));
PF->Add(TEXT("ConcurrencySettings"), TEXT("None"));
PF->Add(TEXT("OwningActor"), TEXT("None"));
PF->Add(TEXT("bIsUISound"), TEXT("True"));
PF = &PC->Add(TEXT("SetGlobalListenerFocusParameters"));
PF->Add(TEXT("FocusAzimuthScale"), TEXT("1.000000"));
PF->Add(TEXT("NonFocusAzimuthScale"), TEXT("1.000000"));
PF->Add(TEXT("FocusDistanceScale"), TEXT("1.000000"));
PF->Add(TEXT("NonFocusDistanceScale"), TEXT("1.000000"));
PF->Add(TEXT("FocusVolumeScale"), TEXT("1.000000"));
PF->Add(TEXT("NonFocusVolumeScale"), TEXT("1.000000"));
PF->Add(TEXT("FocusPriorityScale"), TEXT("1.000000"));
PF->Add(TEXT("NonFocusPriorityScale"), TEXT("1.000000"));
PF = &PC->Add(TEXT("SetSoundClassDistanceScale"));
PF->Add(TEXT("TimeSec"), TEXT("0.000000"));
PF = &PC->Add(TEXT("SpawnEmitterAttached"));
PF->Add(TEXT("AttachPointName"), TEXT("None"));
PF->Add(TEXT("Location"), TEXT(""));
PF->Add(TEXT("Rotation"), TEXT(""));
PF->Add(TEXT("Scale"), TEXT("1.000000,1.000000,1.000000"));
PF->Add(TEXT("LocationType"), TEXT("KeepRelativeOffset"));
PF->Add(TEXT("bAutoDestroy"), TEXT("True"));
PF->Add(TEXT("PoolingMethod"), TEXT("None"));
PF->Add(TEXT("bAutoActivate"), TEXT("True"));
PF = &PC->Add(TEXT("SpawnEmitterAtLocation"));
PF->Add(TEXT("Rotation"), TEXT(""));
PF->Add(TEXT("Scale"), TEXT("1.000000,1.000000,1.000000"));
PF->Add(TEXT("bAutoDestroy"), TEXT("True"));
PF->Add(TEXT("PoolingMethod"), TEXT("None"));
PF->Add(TEXT("bAutoActivateSystem"), TEXT("True"));
PF = &PC->Add(TEXT("PlayWorldCameraShake"));
PF->Add(TEXT("Falloff"), TEXT("1.000000"));
PF->Add(TEXT("bOrientShakeTowardsEpicenter"), TEXT("False"));
PF = &PC->Add(TEXT("ApplyRadialDamageWithFalloff"));
PF->Add(TEXT("DamageCauser"), TEXT("None"));
PF->Add(TEXT("InstigatedByController"), TEXT("None"));
PF->Add(TEXT("DamagePreventionChannel"), TEXT("ECC_Visibility"));
PF = &PC->Add(TEXT("ApplyRadialDamage"));
PF->Add(TEXT("DamageCauser"), TEXT("None"));
PF->Add(TEXT("InstigatedByController"), TEXT("None"));
PF->Add(TEXT("bDoFullDamage"), TEXT("False"));
PF->Add(TEXT("DamagePreventionChannel"), TEXT("ECC_Visibility"));
PF = &PC->Add(TEXT("GetCurrentLevelName"));
PF->Add(TEXT("bRemovePrefixString"), TEXT("True"));
PF = &PC->Add(TEXT("OpenLevelBySoftObjectPtr"));
PF->Add(TEXT("bAbsolute"), TEXT("True"));
PF->Add(TEXT("Options"), TEXT(""));
PF = &PC->Add(TEXT("OpenLevel"));
PF->Add(TEXT("bAbsolute"), TEXT("True"));
PF->Add(TEXT("Options"), TEXT(""));
PF = &PC->Add(TEXT("CreatePlayer"));
PF->Add(TEXT("ControllerId"), TEXT("-1"));
PF->Add(TEXT("bSpawnPlayerController"), TEXT("True"));
PF = &PC->Add(TEXT("BeginDeferredActorSpawnFromClass"));
PF->Add(TEXT("CollisionHandlingOverride"), TEXT("Undefined"));
PF->Add(TEXT("Owner"), TEXT("None"));
PF = &PC->Add(TEXT("BeginSpawningActorFromClass"));
PF->Add(TEXT("bNoCollisionFail"), TEXT("False"));
PF->Add(TEXT("Owner"), TEXT("None"));

PC = &ParamDefaultMetas.Add(TEXT("HealthSnapshotBlueprintLibrary"));
PF = &PC->Add(TEXT("LogPerformanceSnapshot"));
PF->Add(TEXT("bResetStats"), TEXT("True"));

PC = &ParamDefaultMetas.Add(TEXT("ImportanceSamplingLibrary"));
PF = &PC->Add(TEXT("NextSobolCell3D"));
PF->Add(TEXT("NumCells"), TEXT("1"));
PF->Add(TEXT("PreviousValue"), TEXT("0.000000,0.000000,0.000000"));
PF = &PC->Add(TEXT("RandomSobolCell3D"));
PF->Add(TEXT("NumCells"), TEXT("1"));
PF->Add(TEXT("Cell"), TEXT("0.000000,0.000000,0.000000"));
PF->Add(TEXT("Seed"), TEXT("0.000000,0.000000,0.000000"));
PF = &PC->Add(TEXT("NextSobolCell2D"));
PF->Add(TEXT("NumCells"), TEXT("1"));
PF->Add(TEXT("PreviousValue"), TEXT("(X=0.000,Y=0.000)"));
PF = &PC->Add(TEXT("RandomSobolCell2D"));
PF->Add(TEXT("NumCells"), TEXT("1"));
PF->Add(TEXT("Cell"), TEXT("(X=0.000,Y=0.000)"));
PF->Add(TEXT("Seed"), TEXT("(X=0.000,Y=0.000)"));

PC = &ParamDefaultMetas.Add(TEXT("KismetInternationalizationLibrary"));
PF = &PC->Add(TEXT("GetCultureDisplayName"));
PF->Add(TEXT("Localized"), TEXT("True"));
PF = &PC->Add(TEXT("GetSuitableCulture"));
PF->Add(TEXT("FallbackCulture"), TEXT("en"));
PF = &PC->Add(TEXT("GetLocalizedCultures"));
PF->Add(TEXT("IncludeGame"), TEXT("True"));
PF->Add(TEXT("IncludeEngine"), TEXT("False"));
PF->Add(TEXT("IncludeEditor"), TEXT("False"));
PF->Add(TEXT("IncludeAdditional"), TEXT("False"));
PF = &PC->Add(TEXT("ClearCurrentAssetGroupCulture"));
PF->Add(TEXT("SaveToConfig"), TEXT("False"));
PF = &PC->Add(TEXT("SetCurrentAssetGroupCulture"));
PF->Add(TEXT("SaveToConfig"), TEXT("False"));
PF = &PC->Add(TEXT("SetCurrentLanguageAndLocale"));
PF->Add(TEXT("SaveToConfig"), TEXT("False"));
PF = &PC->Add(TEXT("SetCurrentLocale"));
PF->Add(TEXT("SaveToConfig"), TEXT("False"));
PF = &PC->Add(TEXT("SetCurrentLanguage"));
PF->Add(TEXT("SaveToConfig"), TEXT("False"));
PF = &PC->Add(TEXT("SetCurrentCulture"));
PF->Add(TEXT("SaveToConfig"), TEXT("False"));

PC = &ParamDefaultMetas.Add(TEXT("KismetMaterialLibrary"));
PF = &PC->Add(TEXT("CreateDynamicMaterialInstance"));
PF->Add(TEXT("OptionalName"), TEXT("None"));
PF->Add(TEXT("CreationFlags"), TEXT("None"));

PC = &ParamDefaultMetas.Add(TEXT("KismetMathLibrary"));
PF = &PC->Add(TEXT("PointsAreCoplanar"));
PF->Add(TEXT("Tolerance"), TEXT("0.100000"));
PF = &PC->Add(TEXT("MinimumAreaRectangle"));
PF->Add(TEXT("bDebugDraw"), TEXT("False"));
PF = &PC->Add(TEXT("FloatSpringInterp"));
PF->Add(TEXT("Mass"), TEXT("1.000000"));
PF = &PC->Add(TEXT("TEase"));
PF->Add(TEXT("BlendExp"), TEXT("2.000000"));
PF->Add(TEXT("Steps"), TEXT("2"));
PF = &PC->Add(TEXT("TLerp"));
PF->Add(TEXT("InterpMode"), TEXT("QuatInterp"));
PF = &PC->Add(TEXT("NearlyEqual_TransformTransform"));
PF->Add(TEXT("LocationTolerance"), TEXT("0.000100"));
PF->Add(TEXT("RotationTolerance"), TEXT("0.000100"));
PF->Add(TEXT("Scale3DTolerance"), TEXT("0.000100"));
PF = &PC->Add(TEXT("MakeFrameRate"));
PF->Add(TEXT("Denominator"), TEXT("1"));
PF = &PC->Add(TEXT("MakeQualifiedFrameTime"));
PF->Add(TEXT("SubFrame"), TEXT("0.000000"));
PF = &PC->Add(TEXT("MakeDateTime"));
PF->Add(TEXT("Hour"), TEXT("0"));
PF->Add(TEXT("Minute"), TEXT("0"));
PF->Add(TEXT("Second"), TEXT("0"));
PF->Add(TEXT("Millisecond"), TEXT("0"));
PF = &PC->Add(TEXT("LinearColor_IsNearEqual"));
PF->Add(TEXT("Tolerance"), TEXT("0.000100"));
PF = &PC->Add(TEXT("Conv_LinearColorToColor"));
PF->Add(TEXT("InUseSRGB"), TEXT("True"));
PF = &PC->Add(TEXT("HSVToRGB"));
PF->Add(TEXT("A"), TEXT("1.000000"));
PF = &PC->Add(TEXT("LinearColor_SetFromHSV"));
PF->Add(TEXT("A"), TEXT("1.000000"));
PF = &PC->Add(TEXT("LinearColor_SetRGBA"));
PF->Add(TEXT("A"), TEXT("1.000000"));
PF = &PC->Add(TEXT("MakeColor"));
PF->Add(TEXT("A"), TEXT("1.000000"));
PF = &PC->Add(TEXT("Quat_Normalized"));
PF->Add(TEXT("Tolerance"), TEXT("0.000100"));
PF = &PC->Add(TEXT("Quat_Normalize"));
PF->Add(TEXT("Tolerance"), TEXT("0.000100"));
PF = &PC->Add(TEXT("Quat_IsIdentity"));
PF->Add(TEXT("Tolerance"), TEXT("0.000100"));
PF = &PC->Add(TEXT("NotEqual_QuatQuat"));
PF->Add(TEXT("ErrorTolerance"), TEXT("0.000100"));
PF = &PC->Add(TEXT("EqualEqual_QuatQuat"));
PF->Add(TEXT("Tolerance"), TEXT("0.000100"));
PF = &PC->Add(TEXT("Matrix_GetScaleVector"));
PF->Add(TEXT("Tolerance"), TEXT("0.000000"));
PF = &PC->Add(TEXT("Matrix_GetMatrixWithoutScale"));
PF->Add(TEXT("Tolerance"), TEXT("0.000000"));
PF = &PC->Add(TEXT("Matrix_RemoveScaling"));
PF->Add(TEXT("Tolerance"), TEXT("0.000000"));
PF = &PC->Add(TEXT("NotEqual_MatrixMatrix"));
PF->Add(TEXT("Tolerance"), TEXT("0.000100"));
PF = &PC->Add(TEXT("EqualEqual_MatrixMatrix"));
PF->Add(TEXT("Tolerance"), TEXT("0.000100"));
PF = &PC->Add(TEXT("REase"));
PF->Add(TEXT("BlendExp"), TEXT("2.000000"));
PF->Add(TEXT("Steps"), TEXT("2"));
PF = &PC->Add(TEXT("RandomRotator"));
PF->Add(TEXT("bRoll"), TEXT("False"));
PF = &PC->Add(TEXT("NotEqual_RotatorRotator"));
PF->Add(TEXT("ErrorTolerance"), TEXT("0.000100"));
PF = &PC->Add(TEXT("EqualEqual_RotatorRotator"));
PF->Add(TEXT("ErrorTolerance"), TEXT("0.000100"));
PF = &PC->Add(TEXT("Vector4_Normalize3"));
PF->Add(TEXT("Tolerance"), TEXT("0.000000"));
PF = &PC->Add(TEXT("Vector4_Normal3"));
PF->Add(TEXT("Tolerance"), TEXT("0.000100"));
PF = &PC->Add(TEXT("Vector4_IsUnit3"));
PF->Add(TEXT("SquaredLenthTolerance"), TEXT("0.000100"));
PF = &PC->Add(TEXT("Vector4_IsNearlyZero3"));
PF->Add(TEXT("Tolerance"), TEXT("0.000100"));
PF = &PC->Add(TEXT("NotEqual_Vector4Vector4"));
PF->Add(TEXT("ErrorTolerance"), TEXT("0.000100"));
PF = &PC->Add(TEXT("EqualEqual_Vector4Vector4"));
PF->Add(TEXT("ErrorTolerance"), TEXT("0.000100"));
PF = &PC->Add(TEXT("VectorSpringInterp"));
PF->Add(TEXT("Mass"), TEXT("1.000000"));
PF = &PC->Add(TEXT("VEase"));
PF->Add(TEXT("BlendExp"), TEXT("2.000000"));
PF->Add(TEXT("Steps"), TEXT("2"));
PF = &PC->Add(TEXT("Vector_Normalize"));
PF->Add(TEXT("Tolerance"), TEXT("0.000000"));
PF = &PC->Add(TEXT("Vector_Normal2D"));
PF->Add(TEXT("Tolerance"), TEXT("0.000100"));
PF = &PC->Add(TEXT("Normal"));
PF->Add(TEXT("Tolerance"), TEXT("0.000100"));
PF = &PC->Add(TEXT("Vector_IsUnit"));
PF->Add(TEXT("SquaredLenthTolerance"), TEXT("0.000100"));
PF = &PC->Add(TEXT("Vector_IsUniform"));
PF->Add(TEXT("Tolerance"), TEXT("0.000100"));
PF = &PC->Add(TEXT("Vector_IsNearlyZero"));
PF->Add(TEXT("Tolerance"), TEXT("0.000100"));
PF = &PC->Add(TEXT("NotEqual_VectorVector"));
PF->Add(TEXT("ErrorTolerance"), TEXT("0.000100"));
PF = &PC->Add(TEXT("EqualEqual_VectorVector"));
PF->Add(TEXT("ErrorTolerance"), TEXT("0.000100"));
PF = &PC->Add(TEXT("Divide_VectorInt"));
PF->Add(TEXT("B"), TEXT("1"));
PF = &PC->Add(TEXT("Divide_VectorFloat"));
PF->Add(TEXT("B"), TEXT("1.000000"));
PF = &PC->Add(TEXT("Divide_VectorVector"));
PF->Add(TEXT("B"), TEXT("1.000000,1.000000,1.000000"));
PF = &PC->Add(TEXT("CreateVectorFromYawPitch"));
PF->Add(TEXT("Length"), TEXT("1.000000"));
PF = &PC->Add(TEXT("Normalize2D"));
PF->Add(TEXT("Tolerance"), TEXT("0.000000"));
PF = &PC->Add(TEXT("NormalSafe2D"));
PF->Add(TEXT("Tolerance"), TEXT("0.000000"));
PF = &PC->Add(TEXT("IsNearlyZero2D"));
PF->Add(TEXT("Tolerance"), TEXT("0.000100"));
PF = &PC->Add(TEXT("NotEqual_Vector2DVector2D"));
PF->Add(TEXT("ErrorTolerance"), TEXT("0.000100"));
PF = &PC->Add(TEXT("EqualEqual_Vector2DVector2D"));
PF->Add(TEXT("ErrorTolerance"), TEXT("0.000100"));
PF = &PC->Add(TEXT("Divide_Vector2DFloat"));
PF->Add(TEXT("B"), TEXT("1.000000"));
PF = &PC->Add(TEXT("Conv_Vector2DToVector"));
PF->Add(TEXT("Z"), TEXT("0.000000"));
PF = &PC->Add(TEXT("MakePulsatingValue"));
PF->Add(TEXT("InPulsesPerSecond"), TEXT("1.000000"));
PF->Add(TEXT("InPhase"), TEXT("0.000000"));
PF = &PC->Add(TEXT("Ease"));
PF->Add(TEXT("BlendExp"), TEXT("2.000000"));
PF->Add(TEXT("Steps"), TEXT("2"));
PF = &PC->Add(TEXT("Log"));
PF->Add(TEXT("Base"), TEXT("1.000000"));
PF = &PC->Add(TEXT("InRange_FloatFloat"));
PF->Add(TEXT("InclusiveMin"), TEXT("True"));
PF->Add(TEXT("InclusiveMax"), TEXT("True"));
PF = &PC->Add(TEXT("NearlyEqual_FloatFloat"));
PF->Add(TEXT("ErrorTolerance"), TEXT("0.000001"));
PF = &PC->Add(TEXT("Subtract_FloatFloat"));
PF->Add(TEXT("B"), TEXT("1.000000"));
PF = &PC->Add(TEXT("Add_FloatFloat"));
PF->Add(TEXT("B"), TEXT("1.000000"));
PF = &PC->Add(TEXT("Percent_FloatFloat"));
PF->Add(TEXT("B"), TEXT("1.000000"));
PF = &PC->Add(TEXT("Divide_FloatFloat"));
PF->Add(TEXT("B"), TEXT("1.000000"));
PF = &PC->Add(TEXT("InRange_Int64Int64"));
PF->Add(TEXT("InclusiveMin"), TEXT("True"));
PF->Add(TEXT("InclusiveMax"), TEXT("True"));
PF = &PC->Add(TEXT("Subtract_Int64Int64"));
PF->Add(TEXT("B"), TEXT("1"));
PF = &PC->Add(TEXT("Add_Int64Int64"));
PF->Add(TEXT("B"), TEXT("1"));
PF = &PC->Add(TEXT("Divide_Int64Int64"));
PF->Add(TEXT("B"), TEXT("1"));
PF = &PC->Add(TEXT("InRange_IntInt"));
PF->Add(TEXT("InclusiveMin"), TEXT("True"));
PF->Add(TEXT("InclusiveMax"), TEXT("True"));
PF = &PC->Add(TEXT("Subtract_IntInt"));
PF->Add(TEXT("B"), TEXT("1"));
PF = &PC->Add(TEXT("Add_IntInt"));
PF->Add(TEXT("B"), TEXT("1"));
PF = &PC->Add(TEXT("Percent_IntInt"));
PF->Add(TEXT("B"), TEXT("1"));
PF = &PC->Add(TEXT("Divide_IntInt"));
PF->Add(TEXT("B"), TEXT("1"));
PF = &PC->Add(TEXT("Subtract_ByteByte"));
PF->Add(TEXT("B"), TEXT("1"));
PF = &PC->Add(TEXT("Add_ByteByte"));
PF->Add(TEXT("B"), TEXT("1"));
PF = &PC->Add(TEXT("Percent_ByteByte"));
PF->Add(TEXT("B"), TEXT("1"));
PF = &PC->Add(TEXT("Divide_ByteByte"));
PF->Add(TEXT("B"), TEXT("1"));

PC = &ParamDefaultMetas.Add(TEXT("KismetRenderingLibrary"));
PF = &PC->Add(TEXT("RenderTargetCreateStaticTexture2DEditorOnly"));
PF->Add(TEXT("Name"), TEXT("Texture"));
PF->Add(TEXT("CompressionSettings"), TEXT("TC_Default"));
PF->Add(TEXT("MipSettings"), TEXT("TMGS_FromTextureGroup"));
PF = &PC->Add(TEXT("CreateRenderTargetVolume"));
PF->Add(TEXT("Width"), TEXT("16"));
PF->Add(TEXT("Height"), TEXT("16"));
PF->Add(TEXT("Depth"), TEXT("16"));
PF->Add(TEXT("Format"), TEXT("RTF_RGBA16f"));
PF->Add(TEXT("ClearColor"), TEXT("(R=0.000000,G=0.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("bAutoGenerateMipMaps"), TEXT("False"));
PF = &PC->Add(TEXT("CreateRenderTarget2DArray"));
PF->Add(TEXT("Width"), TEXT("256"));
PF->Add(TEXT("Height"), TEXT("256"));
PF->Add(TEXT("Slices"), TEXT("1"));
PF->Add(TEXT("Format"), TEXT("RTF_RGBA16f"));
PF->Add(TEXT("ClearColor"), TEXT("(R=0.000000,G=0.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("bAutoGenerateMipMaps"), TEXT("False"));
PF = &PC->Add(TEXT("CreateRenderTarget2D"));
PF->Add(TEXT("Width"), TEXT("256"));
PF->Add(TEXT("Height"), TEXT("256"));
PF->Add(TEXT("Format"), TEXT("RTF_RGBA16f"));
PF->Add(TEXT("ClearColor"), TEXT("(R=0.000000,G=0.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("bAutoGenerateMipMaps"), TEXT("False"));
PF = &PC->Add(TEXT("ClearRenderTarget2D"));
PF->Add(TEXT("ClearColor"), TEXT("(R=0.000000,G=0.000000,B=0.000000,A=1.000000)"));

PC = &ParamDefaultMetas.Add(TEXT("KismetStringLibrary"));
PF = &PC->Add(TEXT("Split"));
PF->Add(TEXT("SearchCase"), TEXT("IgnoreCase"));
PF->Add(TEXT("SearchDir"), TEXT("FromStart"));
PF = &PC->Add(TEXT("ReplaceInline"));
PF->Add(TEXT("SearchCase"), TEXT("IgnoreCase"));
PF = &PC->Add(TEXT("Replace"));
PF->Add(TEXT("SearchCase"), TEXT("IgnoreCase"));
PF = &PC->Add(TEXT("MatchesWildcard"));
PF->Add(TEXT("SearchCase"), TEXT("IgnoreCase"));
PF = &PC->Add(TEXT("EndsWith"));
PF->Add(TEXT("SearchCase"), TEXT("IgnoreCase"));
PF = &PC->Add(TEXT("StartsWith"));
PF->Add(TEXT("SearchCase"), TEXT("IgnoreCase"));
PF = &PC->Add(TEXT("JoinStringArray"));
PF->Add(TEXT("Separator"), TEXT(" "));
PF = &PC->Add(TEXT("ParseIntoArray"));
PF->Add(TEXT("Delimiter"), TEXT(" "));
PF->Add(TEXT("CullEmptyStrings"), TEXT("True"));
PF = &PC->Add(TEXT("GetCharacterAsNumber"));
PF->Add(TEXT("Index"), TEXT("0"));
PF = &PC->Add(TEXT("Contains"));
PF->Add(TEXT("bUseCase"), TEXT("False"));
PF->Add(TEXT("bSearchFromEnd"), TEXT("False"));
PF = &PC->Add(TEXT("FindSubstring"));
PF->Add(TEXT("bUseCase"), TEXT("False"));
PF->Add(TEXT("bSearchFromEnd"), TEXT("False"));
PF->Add(TEXT("StartPosition"), TEXT("-1"));
PF = &PC->Add(TEXT("GetSubstring"));
PF->Add(TEXT("StartIndex"), TEXT("0"));
PF->Add(TEXT("Length"), TEXT("1"));

PC = &ParamDefaultMetas.Add(TEXT("KismetSystemLibrary"));
PF = &PC->Add(TEXT("DrawDebugFloatHistoryLocation"));
PF->Add(TEXT("DrawColor"), TEXT("(R=1.000000,G=1.000000,B=1.000000,A=1.000000)"));
PF->Add(TEXT("Duration"), TEXT("0.000000"));
PF = &PC->Add(TEXT("DrawDebugFloatHistoryTransform"));
PF->Add(TEXT("DrawColor"), TEXT("(R=1.000000,G=1.000000,B=1.000000,A=1.000000)"));
PF->Add(TEXT("Duration"), TEXT("0.000000"));
PF = &PC->Add(TEXT("DrawDebugCamera"));
PF->Add(TEXT("CameraColor"), TEXT("(R=1.000000,G=1.000000,B=1.000000,A=1.000000)"));
PF->Add(TEXT("Duration"), TEXT("0.000000"));
PF = &PC->Add(TEXT("DrawDebugFrustum"));
PF->Add(TEXT("FrustumColor"), TEXT("(R=1.000000,G=1.000000,B=1.000000,A=1.000000)"));
PF->Add(TEXT("Duration"), TEXT("0.000000"));
PF->Add(TEXT("Thickness"), TEXT("0.000000"));
PF = &PC->Add(TEXT("DrawDebugPlane"));
PF->Add(TEXT("PlaneColor"), TEXT("(R=1.000000,G=1.000000,B=1.000000,A=1.000000)"));
PF->Add(TEXT("Duration"), TEXT("0.000000"));
PF = &PC->Add(TEXT("DrawDebugString"));
PF->Add(TEXT("TestBaseActor"), TEXT("None"));
PF->Add(TEXT("TextColor"), TEXT("(R=1.000000,G=1.000000,B=1.000000,A=1.000000)"));
PF->Add(TEXT("Duration"), TEXT("0.000000"));
PF = &PC->Add(TEXT("DrawDebugCapsule"));
PF->Add(TEXT("LineColor"), TEXT("(R=1.000000,G=1.000000,B=1.000000,A=1.000000)"));
PF->Add(TEXT("Duration"), TEXT("0.000000"));
PF->Add(TEXT("Thickness"), TEXT("0.000000"));
PF = &PC->Add(TEXT("DrawDebugConeInDegrees"));
PF->Add(TEXT("Length"), TEXT("100.000000"));
PF->Add(TEXT("AngleWidth"), TEXT("45.000000"));
PF->Add(TEXT("AngleHeight"), TEXT("45.000000"));
PF->Add(TEXT("NumSides"), TEXT("12"));
PF->Add(TEXT("LineColor"), TEXT("(R=1.000000,G=1.000000,B=1.000000,A=1.000000)"));
PF->Add(TEXT("Duration"), TEXT("0.000000"));
PF->Add(TEXT("Thickness"), TEXT("0.000000"));
PF = &PC->Add(TEXT("DrawDebugCone"));
PF->Add(TEXT("Duration"), TEXT("0.000000"));
PF->Add(TEXT("Thickness"), TEXT("0.000000"));
PF = &PC->Add(TEXT("DrawDebugCylinder"));
PF->Add(TEXT("Radius"), TEXT("100.000000"));
PF->Add(TEXT("Segments"), TEXT("12"));
PF->Add(TEXT("LineColor"), TEXT("(R=1.000000,G=1.000000,B=1.000000,A=1.000000)"));
PF->Add(TEXT("Duration"), TEXT("0.000000"));
PF->Add(TEXT("Thickness"), TEXT("0.000000"));
PF = &PC->Add(TEXT("DrawDebugSphere"));
PF->Add(TEXT("Radius"), TEXT("100.000000"));
PF->Add(TEXT("Segments"), TEXT("12"));
PF->Add(TEXT("LineColor"), TEXT("(R=1.000000,G=1.000000,B=1.000000,A=1.000000)"));
PF->Add(TEXT("Duration"), TEXT("0.000000"));
PF->Add(TEXT("Thickness"), TEXT("0.000000"));
PF = &PC->Add(TEXT("DrawDebugCoordinateSystem"));
PF->Add(TEXT("Scale"), TEXT("1.000000"));
PF->Add(TEXT("Duration"), TEXT("0.000000"));
PF->Add(TEXT("Thickness"), TEXT("0.000000"));
PF = &PC->Add(TEXT("DrawDebugBox"));
PF->Add(TEXT("Rotation"), TEXT(""));
PF->Add(TEXT("Duration"), TEXT("0.000000"));
PF->Add(TEXT("Thickness"), TEXT("0.000000"));
PF = &PC->Add(TEXT("DrawDebugArrow"));
PF->Add(TEXT("Duration"), TEXT("0.000000"));
PF->Add(TEXT("Thickness"), TEXT("0.000000"));
PF = &PC->Add(TEXT("DrawDebugPoint"));
PF->Add(TEXT("Duration"), TEXT("0.000000"));
PF = &PC->Add(TEXT("DrawDebugCircle"));
PF->Add(TEXT("NumSegments"), TEXT("12"));
PF->Add(TEXT("LineColor"), TEXT("(R=1.000000,G=1.000000,B=1.000000,A=1.000000)"));
PF->Add(TEXT("Duration"), TEXT("0.000000"));
PF->Add(TEXT("Thickness"), TEXT("0.000000"));
PF->Add(TEXT("YAxis"), TEXT("0.000000,1.000000,0.000000"));
PF->Add(TEXT("ZAxis"), TEXT("0.000000,0.000000,1.000000"));
PF->Add(TEXT("bDrawAxis"), TEXT("False"));
PF = &PC->Add(TEXT("DrawDebugLine"));
PF->Add(TEXT("Duration"), TEXT("0.000000"));
PF->Add(TEXT("Thickness"), TEXT("0.000000"));
PF = &PC->Add(TEXT("CapsuleTraceMultiByProfile"));
PF->Add(TEXT("TraceColor"), TEXT("(R=1.000000,G=0.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("TraceHitColor"), TEXT("(R=0.000000,G=1.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("DrawTime"), TEXT("5.000000"));
PF = &PC->Add(TEXT("CapsuleTraceSingleByProfile"));
PF->Add(TEXT("TraceColor"), TEXT("(R=1.000000,G=0.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("TraceHitColor"), TEXT("(R=0.000000,G=1.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("DrawTime"), TEXT("5.000000"));
PF = &PC->Add(TEXT("BoxTraceMultiByProfile"));
PF->Add(TEXT("TraceColor"), TEXT("(R=1.000000,G=0.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("TraceHitColor"), TEXT("(R=0.000000,G=1.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("DrawTime"), TEXT("5.000000"));
PF = &PC->Add(TEXT("BoxTraceSingleByProfile"));
PF->Add(TEXT("TraceColor"), TEXT("(R=1.000000,G=0.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("TraceHitColor"), TEXT("(R=0.000000,G=1.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("DrawTime"), TEXT("5.000000"));
PF = &PC->Add(TEXT("SphereTraceMultiByProfile"));
PF->Add(TEXT("TraceColor"), TEXT("(R=1.000000,G=0.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("TraceHitColor"), TEXT("(R=0.000000,G=1.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("DrawTime"), TEXT("5.000000"));
PF = &PC->Add(TEXT("SphereTraceSingleByProfile"));
PF->Add(TEXT("TraceColor"), TEXT("(R=1.000000,G=0.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("TraceHitColor"), TEXT("(R=0.000000,G=1.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("DrawTime"), TEXT("5.000000"));
PF = &PC->Add(TEXT("LineTraceMultiByProfile"));
PF->Add(TEXT("TraceColor"), TEXT("(R=1.000000,G=0.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("TraceHitColor"), TEXT("(R=0.000000,G=1.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("DrawTime"), TEXT("5.000000"));
PF = &PC->Add(TEXT("LineTraceSingleByProfile"));
PF->Add(TEXT("TraceColor"), TEXT("(R=1.000000,G=0.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("TraceHitColor"), TEXT("(R=0.000000,G=1.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("DrawTime"), TEXT("5.000000"));
PF = &PC->Add(TEXT("CapsuleTraceMultiForObjects"));
PF->Add(TEXT("TraceColor"), TEXT("(R=1.000000,G=0.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("TraceHitColor"), TEXT("(R=0.000000,G=1.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("DrawTime"), TEXT("5.000000"));
PF = &PC->Add(TEXT("CapsuleTraceSingleForObjects"));
PF->Add(TEXT("TraceColor"), TEXT("(R=1.000000,G=0.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("TraceHitColor"), TEXT("(R=0.000000,G=1.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("DrawTime"), TEXT("5.000000"));
PF = &PC->Add(TEXT("BoxTraceMultiForObjects"));
PF->Add(TEXT("TraceColor"), TEXT("(R=1.000000,G=0.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("TraceHitColor"), TEXT("(R=0.000000,G=1.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("DrawTime"), TEXT("5.000000"));
PF = &PC->Add(TEXT("BoxTraceSingleForObjects"));
PF->Add(TEXT("TraceColor"), TEXT("(R=1.000000,G=0.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("TraceHitColor"), TEXT("(R=0.000000,G=1.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("DrawTime"), TEXT("5.000000"));
PF = &PC->Add(TEXT("SphereTraceMultiForObjects"));
PF->Add(TEXT("TraceColor"), TEXT("(R=1.000000,G=0.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("TraceHitColor"), TEXT("(R=0.000000,G=1.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("DrawTime"), TEXT("5.000000"));
PF = &PC->Add(TEXT("SphereTraceSingleForObjects"));
PF->Add(TEXT("TraceColor"), TEXT("(R=1.000000,G=0.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("TraceHitColor"), TEXT("(R=0.000000,G=1.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("DrawTime"), TEXT("5.000000"));
PF = &PC->Add(TEXT("LineTraceMultiForObjects"));
PF->Add(TEXT("TraceColor"), TEXT("(R=1.000000,G=0.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("TraceHitColor"), TEXT("(R=0.000000,G=1.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("DrawTime"), TEXT("5.000000"));
PF = &PC->Add(TEXT("LineTraceSingleForObjects"));
PF->Add(TEXT("TraceColor"), TEXT("(R=1.000000,G=0.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("TraceHitColor"), TEXT("(R=0.000000,G=1.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("DrawTime"), TEXT("5.000000"));
PF = &PC->Add(TEXT("CapsuleTraceMulti"));
PF->Add(TEXT("TraceColor"), TEXT("(R=1.000000,G=0.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("TraceHitColor"), TEXT("(R=0.000000,G=1.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("DrawTime"), TEXT("5.000000"));
PF = &PC->Add(TEXT("CapsuleTraceSingle"));
PF->Add(TEXT("TraceColor"), TEXT("(R=1.000000,G=0.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("TraceHitColor"), TEXT("(R=0.000000,G=1.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("DrawTime"), TEXT("5.000000"));
PF = &PC->Add(TEXT("BoxTraceMulti"));
PF->Add(TEXT("TraceColor"), TEXT("(R=1.000000,G=0.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("TraceHitColor"), TEXT("(R=0.000000,G=1.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("DrawTime"), TEXT("5.000000"));
PF = &PC->Add(TEXT("BoxTraceSingle"));
PF->Add(TEXT("TraceColor"), TEXT("(R=1.000000,G=0.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("TraceHitColor"), TEXT("(R=0.000000,G=1.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("DrawTime"), TEXT("5.000000"));
PF = &PC->Add(TEXT("SphereTraceMulti"));
PF->Add(TEXT("TraceColor"), TEXT("(R=1.000000,G=0.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("TraceHitColor"), TEXT("(R=0.000000,G=1.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("DrawTime"), TEXT("5.000000"));
PF = &PC->Add(TEXT("SphereTraceSingle"));
PF->Add(TEXT("TraceColor"), TEXT("(R=1.000000,G=0.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("TraceHitColor"), TEXT("(R=0.000000,G=1.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("DrawTime"), TEXT("5.000000"));
PF = &PC->Add(TEXT("LineTraceMulti"));
PF->Add(TEXT("TraceColor"), TEXT("(R=1.000000,G=0.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("TraceHitColor"), TEXT("(R=0.000000,G=1.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("DrawTime"), TEXT("5.000000"));
PF = &PC->Add(TEXT("LineTraceSingle"));
PF->Add(TEXT("TraceColor"), TEXT("(R=1.000000,G=0.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("TraceHitColor"), TEXT("(R=0.000000,G=1.000000,B=0.000000,A=1.000000)"));
PF->Add(TEXT("DrawTime"), TEXT("5.000000"));
PF = &PC->Add(TEXT("K2_SetTimer"));
PF->Add(TEXT("InitialStartDelay"), TEXT("0.000000"));
PF->Add(TEXT("InitialStartDelayVariance"), TEXT("0.000000"));
PF = &PC->Add(TEXT("K2_SetTimerDelegate"));
PF->Add(TEXT("InitialStartDelay"), TEXT("0.000000"));
PF->Add(TEXT("InitialStartDelayVariance"), TEXT("0.000000"));
PF = &PC->Add(TEXT("ExecuteConsoleCommand"));
PF->Add(TEXT("SpecificPlayer"), TEXT("None"));
PF = &PC->Add(TEXT("PrintText"));
PF->Add(TEXT("InText"), TEXT("INVTEXT(\"Hello\")"));
PF->Add(TEXT("bPrintToScreen"), TEXT("True"));
PF->Add(TEXT("bPrintToLog"), TEXT("True"));
PF->Add(TEXT("TextColor"), TEXT("(R=0.000000,G=0.660000,B=1.000000,A=1.000000)"));
PF->Add(TEXT("Duration"), TEXT("2.000000"));
PF = &PC->Add(TEXT("PrintString"));
PF->Add(TEXT("InString"), TEXT("Hello"));
PF->Add(TEXT("bPrintToScreen"), TEXT("True"));
PF->Add(TEXT("bPrintToLog"), TEXT("True"));
PF->Add(TEXT("TextColor"), TEXT("(R=0.000000,G=0.660000,B=1.000000,A=1.000000)"));
PF->Add(TEXT("Duration"), TEXT("2.000000"));

PC = &ParamDefaultMetas.Add(TEXT("KismetTextLibrary"));
PF = &PC->Add(TEXT("AsTimeZoneTime_DateTime"));
PF->Add(TEXT("InTimeZone"), TEXT(""));
PF = &PC->Add(TEXT("AsTimeZoneDateTime_DateTime"));
PF->Add(TEXT("InTimeZone"), TEXT(""));
PF = &PC->Add(TEXT("AsTimeZoneDate_DateTime"));
PF->Add(TEXT("InTimeZone"), TEXT(""));
PF = &PC->Add(TEXT("AsPercent_Float"));
PF->Add(TEXT("bAlwaysSign"), TEXT("False"));
PF->Add(TEXT("bUseGrouping"), TEXT("True"));
PF->Add(TEXT("MinimumIntegralDigits"), TEXT("1"));
PF->Add(TEXT("MaximumIntegralDigits"), TEXT("324"));
PF->Add(TEXT("MinimumFractionalDigits"), TEXT("0"));
PF->Add(TEXT("MaximumFractionalDigits"), TEXT("3"));
PF = &PC->Add(TEXT("AsCurrency_Float"));
PF->Add(TEXT("bAlwaysSign"), TEXT("False"));
PF->Add(TEXT("bUseGrouping"), TEXT("True"));
PF->Add(TEXT("MinimumIntegralDigits"), TEXT("1"));
PF->Add(TEXT("MaximumIntegralDigits"), TEXT("324"));
PF->Add(TEXT("MinimumFractionalDigits"), TEXT("0"));
PF->Add(TEXT("MaximumFractionalDigits"), TEXT("3"));
PF->Add(TEXT("CurrencyCode"), TEXT(""));
PF = &PC->Add(TEXT("AsCurrency_Integer"));
PF->Add(TEXT("bAlwaysSign"), TEXT("False"));
PF->Add(TEXT("bUseGrouping"), TEXT("True"));
PF->Add(TEXT("MinimumIntegralDigits"), TEXT("1"));
PF->Add(TEXT("MaximumIntegralDigits"), TEXT("324"));
PF->Add(TEXT("MinimumFractionalDigits"), TEXT("0"));
PF->Add(TEXT("MaximumFractionalDigits"), TEXT("3"));
PF->Add(TEXT("CurrencyCode"), TEXT(""));
PF = &PC->Add(TEXT("Conv_FloatToText"));
PF->Add(TEXT("bAlwaysSign"), TEXT("False"));
PF->Add(TEXT("bUseGrouping"), TEXT("True"));
PF->Add(TEXT("MinimumIntegralDigits"), TEXT("1"));
PF->Add(TEXT("MaximumIntegralDigits"), TEXT("324"));
PF->Add(TEXT("MinimumFractionalDigits"), TEXT("0"));
PF->Add(TEXT("MaximumFractionalDigits"), TEXT("3"));
PF = &PC->Add(TEXT("Conv_Int64ToText"));
PF->Add(TEXT("bAlwaysSign"), TEXT("False"));
PF->Add(TEXT("bUseGrouping"), TEXT("True"));
PF->Add(TEXT("MinimumIntegralDigits"), TEXT("1"));
PF->Add(TEXT("MaximumIntegralDigits"), TEXT("324"));
PF = &PC->Add(TEXT("Conv_IntToText"));
PF->Add(TEXT("bAlwaysSign"), TEXT("False"));
PF->Add(TEXT("bUseGrouping"), TEXT("True"));
PF->Add(TEXT("MinimumIntegralDigits"), TEXT("1"));
PF->Add(TEXT("MaximumIntegralDigits"), TEXT("324"));

PC = &ParamDefaultMetas.Add(TEXT("MeshVertexPainterKismetLibrary"));
PF = &PC->Add(TEXT("PaintVerticesLerpAlongAxis"));
PF->Add(TEXT("bConvertToSRGB"), TEXT("True"));
PF = &PC->Add(TEXT("PaintVerticesSingleColor"));
PF->Add(TEXT("bConvertToSRGB"), TEXT("True"));

PC = &ParamDefaultMetas.Add(TEXT("StereoLayerFunctionLibrary"));
PF = &PC->Add(TEXT("SetSplashScreen"));
PF->Add(TEXT("Scale"), TEXT("(X=1.000,Y=1.000)"));
PF->Add(TEXT("Offset"), TEXT("0.000000,0.000000,0.000000"));
PF->Add(TEXT("bShowLoadingMovie"), TEXT("False"));
PF->Add(TEXT("bShowOnSet"), TEXT("False"));

PC = &ParamDefaultMetas.Add(TEXT("VisualLoggerKismetLibrary"));
PF = &PC->Add(TEXT("LogSegment"));
PF->Add(TEXT("ObjectColor"), TEXT("(R=0.000000,G=0.000000,B=1.000000,A=1.000000)"));
PF->Add(TEXT("Thickness"), TEXT("0.000000"));
PF->Add(TEXT("CategoryName"), TEXT("VisLogBP"));
PF->Add(TEXT("bAddToMessageLog"), TEXT("False"));
PF = &PC->Add(TEXT("LogBox"));
PF->Add(TEXT("ObjectColor"), TEXT("(R=0.000000,G=0.000000,B=1.000000,A=1.000000)"));
PF->Add(TEXT("LogCategory"), TEXT("VisLogBP"));
PF->Add(TEXT("bAddToMessageLog"), TEXT("False"));
PF = &PC->Add(TEXT("LogLocation"));
PF->Add(TEXT("ObjectColor"), TEXT("(R=0.000000,G=0.000000,B=1.000000,A=1.000000)"));
PF->Add(TEXT("Radius"), TEXT("10.000000"));
PF->Add(TEXT("LogCategory"), TEXT("VisLogBP"));
PF->Add(TEXT("bAddToMessageLog"), TEXT("False"));
PF = &PC->Add(TEXT("LogText"));
PF->Add(TEXT("LogCategory"), TEXT("VisLogBP"));
PF->Add(TEXT("bAddToMessageLog"), TEXT("False"));

PC = &ParamDefaultMetas.Add(TEXT("LevelStreamingDynamic"));
PF = &PC->Add(TEXT("LoadLevelInstanceBySoftObjectPtr"));
PF->Add(TEXT("OptionalLevelNameOverride"), TEXT(""));
PF = &PC->Add(TEXT("LoadLevelInstance"));
PF->Add(TEXT("OptionalLevelNameOverride"), TEXT(""));

PC = &ParamDefaultMetas.Add(TEXT("MaterialInstanceDynamic"));
PF = &PC->Add(TEXT("K2_CopyMaterialInstanceParameters"));
PF->Add(TEXT("bQuickParametersOnly"), TEXT("False"));

PC = &ParamDefaultMetas.Add(TEXT("SoundSubmix"));
PF = &PC->Add(TEXT("StartSpectralAnalysis"));
PF->Add(TEXT("FFTSize"), TEXT("DefaultSize"));
PF->Add(TEXT("InterpolationMethod"), TEXT("Linear"));
PF->Add(TEXT("WindowType"), TEXT("Hann"));
PF->Add(TEXT("HopSize"), TEXT("0.000000"));
PF->Add(TEXT("SpectrumType"), TEXT("MagnitudeSpectrum"));
PF = &PC->Add(TEXT("AddSpectralAnalysisDelegate"));
PF->Add(TEXT("UpdateRate"), TEXT("10.000000"));
PF->Add(TEXT("DecibelNoiseFloor"), TEXT("-40.000000"));
PF->Add(TEXT("bDoNormalize"), TEXT("True"));
PF->Add(TEXT("bDoAutoRange"), TEXT("False"));
PF->Add(TEXT("AutoRangeAttackTime"), TEXT("0.100000"));
PF->Add(TEXT("AutoRangeReleaseTime"), TEXT("60.000000"));
PF = &PC->Add(TEXT("StopRecordingOutput"));
PF->Add(TEXT("ExistingSoundWaveToOverwrite"), TEXT("None"));

PC = &ParamDefaultMetas.Add(TEXT("SkeletalMesh"));
PF = &PC->Add(TEXT("IsSectionUsingCloth"));
PF->Add(TEXT("bCheckCorrespondingSections"), TEXT("True"));

PC = &ParamDefaultMetas.Add(TEXT("StaticMesh"));
PF = &PC->Add(TEXT("BuildFromStaticMeshDescriptions"));
PF->Add(TEXT("bBuildSimpleCollision"), TEXT("False"));
PF = &PC->Add(TEXT("CreateStaticMeshDescription"));
PF->Add(TEXT("Outer"), TEXT("None"));

PC = &ParamDefaultMetas.Add(TEXT("CanvasRenderTarget2D"));
PF = &PC->Add(TEXT("CreateCanvasRenderTarget2D"));
PF->Add(TEXT("Width"), TEXT("1024"));
PF->Add(TEXT("Height"), TEXT("1024"));

PC = &ParamDefaultMetas.Add(TEXT("ViewportStatsSubsystem"));
PF = &PC->Add(TEXT("AddTimedDisplay"));
PF->Add(TEXT("Color"), TEXT("(R=1.000000,G=1.000000,B=1.000000,A=1.000000)"));
PF->Add(TEXT("Duration"), TEXT("0.000000"));

PC = &ParamDefaultMetas.Add(TEXT("AudioMixerBlueprintLibrary"));
PF = &PC->Add(TEXT("GetPhaseForFrequencies"));
PF->Add(TEXT("SubmixToAnalyze"), TEXT("None"));
PF = &PC->Add(TEXT("GetMagnitudeForFrequencies"));
PF->Add(TEXT("SubmixToAnalyze"), TEXT("None"));
PF = &PC->Add(TEXT("MakePresetSpectralAnalysisBandSettings"));
PF->Add(TEXT("InNumBands"), TEXT("10"));
PF->Add(TEXT("InAttackTimeMsec"), TEXT("10"));
PF->Add(TEXT("InReleaseTimeMsec"), TEXT("10"));
PF = &PC->Add(TEXT("MakeFullSpectrumSpectralAnalysisBandSettings"));
PF->Add(TEXT("InNumBands"), TEXT("30"));
PF->Add(TEXT("InMinimumFrequency"), TEXT("40.000000"));
PF->Add(TEXT("InMaximumFrequency"), TEXT("16000.000000"));
PF->Add(TEXT("InAttackTimeMsec"), TEXT("10"));
PF->Add(TEXT("InReleaseTimeMsec"), TEXT("10"));
PF = &PC->Add(TEXT("MakeMusicalSpectralAnalysisBandSettings"));
PF->Add(TEXT("InNumSemitones"), TEXT("60"));
PF->Add(TEXT("InStartingMusicalNote"), TEXT("C"));
PF->Add(TEXT("InStartingOctave"), TEXT("2"));
PF->Add(TEXT("InAttackTimeMsec"), TEXT("10"));
PF->Add(TEXT("InReleaseTimeMsec"), TEXT("10"));
PF = &PC->Add(TEXT("StopAnalyzingOutput"));
PF->Add(TEXT("SubmixToStopAnalyzing"), TEXT("None"));
PF = &PC->Add(TEXT("StartAnalyzingOutput"));
PF->Add(TEXT("SubmixToAnalyze"), TEXT("None"));
PF->Add(TEXT("FFTSize"), TEXT("DefaultSize"));
PF->Add(TEXT("InterpolationMethod"), TEXT("Linear"));
PF->Add(TEXT("WindowType"), TEXT("Hann"));
PF->Add(TEXT("HopSize"), TEXT("0.000000"));
PF->Add(TEXT("SpectrumType"), TEXT("MagnitudeSpectrum"));
PF = &PC->Add(TEXT("ResumeRecordingOutput"));
PF->Add(TEXT("SubmixToPause"), TEXT("None"));
PF = &PC->Add(TEXT("PauseRecordingOutput"));
PF->Add(TEXT("SubmixToPause"), TEXT("None"));
PF = &PC->Add(TEXT("StopRecordingOutput"));
PF->Add(TEXT("SubmixToRecord"), TEXT("None"));
PF->Add(TEXT("ExistingSoundWaveToOverwrite"), TEXT("None"));
PF = &PC->Add(TEXT("StartRecordingOutput"));
PF->Add(TEXT("SubmixToRecord"), TEXT("None"));

PC = &ParamDefaultMetas.Add(TEXT("QuartzClockHandle"));
PF = &PC->Add(TEXT("SetBeatsPerMinute"));
PF->Add(TEXT("BeatsPerMinute"), TEXT("60.000000"));
PF = &PC->Add(TEXT("SetThirtySecondNotesPerMinute"));
PF->Add(TEXT("ThirtySecondsNotesPerMinute"), TEXT("960.000000"));
PF = &PC->Add(TEXT("SetSecondsPerTick"));
PF->Add(TEXT("SecondsPerTick"), TEXT("0.250000"));
PF = &PC->Add(TEXT("SetTicksPerSecond"));
PF->Add(TEXT("TicksPerSecond"), TEXT("10.000000"));
PF = &PC->Add(TEXT("SetMillisecondsPerTick"));
PF->Add(TEXT("MillisecondsPerTick"), TEXT("100.000000"));
PF = &PC->Add(TEXT("GetDurationOfQuantizationTypeInSeconds"));
PF->Add(TEXT("Multiplier"), TEXT("1.000000"));

PC = &ParamDefaultMetas.Add(TEXT("QuartzSubsystem"));
PF = &PC->Add(TEXT("GetDurationOfQuantizationTypeInSeconds"));
PF->Add(TEXT("Multiplier"), TEXT("1.000000"));
PF = &PC->Add(TEXT("CreateNewClock"));
PF->Add(TEXT("bOverrideSettingsIfClockExists"), TEXT("False"));
PF->Add(TEXT("bUseAudioEngineClockManager"), TEXT("True"));

PC = &ParamDefaultMetas.Add(TEXT("SubmixEffectReverbPreset"));
PF = &PC->Add(TEXT("SetSettingsWithReverbEffect"));
PF->Add(TEXT("DryLevel"), TEXT("0.000000"));

PC = &ParamDefaultMetas.Add(TEXT("MediaBlueprintFunctionLibrary"));
PF = &PC->Add(TEXT("EnumerateWebcamCaptureDevices"));
PF->Add(TEXT("Filter"), TEXT("-1"));
PF = &PC->Add(TEXT("EnumerateVideoCaptureDevices"));
PF->Add(TEXT("Filter"), TEXT("-1"));
PF = &PC->Add(TEXT("EnumerateAudioCaptureDevices"));
PF->Add(TEXT("Filter"), TEXT("-1"));

PC = &ParamDefaultMetas.Add(TEXT("MediaSoundComponent"));
PF = &PC->Add(TEXT("SetSpectralAnalysisSettings"));
PF->Add(TEXT("InFFTSize"), TEXT("Medium_512"));

PC = &ParamDefaultMetas.Add(TEXT("TimeManagementBlueprintLibrary"));
PF = &PC->Add(TEXT("Conv_TimecodeToString"));
PF->Add(TEXT("bForceSignDisplay"), TEXT("False"));

PC = &ParamDefaultMetas.Add(TEXT("MovieSceneSequencePlayer"));
PF = &PC->Add(TEXT("SetFrameRange"));
PF->Add(TEXT("SubFrames"), TEXT("0.000000"));
PF = &PC->Add(TEXT("PlayLooping"));
PF->Add(TEXT("NumLoops"), TEXT("-1"));

PC = &ParamDefaultMetas.Add(TEXT("KismetAnimationLibrary"));
PF = &PC->Add(TEXT("K2_EndProfilingTimer"));
PF->Add(TEXT("bLog"), TEXT("True"));
PF->Add(TEXT("LogPrefix"), TEXT(""));

PC = &ParamDefaultMetas.Add(TEXT("PlayMontageCallbackProxy"));
PF = &PC->Add(TEXT("CreateProxyObjectForPlayMontage"));
PF->Add(TEXT("PlayRate"), TEXT("1.000000"));
PF->Add(TEXT("StartingPosition"), TEXT("0.000000"));
PF->Add(TEXT("StartingSection"), TEXT("None"));

PC = &ParamDefaultMetas.Add(TEXT("WidgetAnimationPlayCallbackProxy"));
PF = &PC->Add(TEXT("CreatePlayAnimationTimeRangeProxyObject"));
PF->Add(TEXT("StartAtTime"), TEXT("0.000000"));
PF->Add(TEXT("EndAtTime"), TEXT("0.000000"));
PF->Add(TEXT("NumLoopsToPlay"), TEXT("1"));
PF->Add(TEXT("PlayMode"), TEXT("Forward"));
PF->Add(TEXT("PlaybackSpeed"), TEXT("1.000000"));
PF = &PC->Add(TEXT("CreatePlayAnimationProxyObject"));
PF->Add(TEXT("StartAtTime"), TEXT("0.000000"));
PF->Add(TEXT("NumLoopsToPlay"), TEXT("1"));
PF->Add(TEXT("PlayMode"), TEXT("Forward"));
PF->Add(TEXT("PlaybackSpeed"), TEXT("1.000000"));

PC = &ParamDefaultMetas.Add(TEXT("WidgetBlueprintLibrary"));
PF = &PC->Add(TEXT("GetAllWidgetsOfClass"));
PF->Add(TEXT("TopLevelOnly"), TEXT("True"));
PF = &PC->Add(TEXT("MakeBrushFromMaterial"));
PF->Add(TEXT("Width"), TEXT("32"));
PF->Add(TEXT("Height"), TEXT("32"));
PF = &PC->Add(TEXT("MakeBrushFromTexture"));
PF->Add(TEXT("Width"), TEXT("0"));
PF->Add(TEXT("Height"), TEXT("0"));
PF = &PC->Add(TEXT("ReleaseJoystickCapture"));
PF->Add(TEXT("bInAllJoysticks"), TEXT("False"));
PF = &PC->Add(TEXT("ClearUserFocus"));
PF->Add(TEXT("bInAllUsers"), TEXT("False"));
PF = &PC->Add(TEXT("CaptureJoystick"));
PF->Add(TEXT("bInAllJoysticks"), TEXT("False"));
PF = &PC->Add(TEXT("SetUserFocus"));
PF->Add(TEXT("bInAllUsers"), TEXT("False"));
PF = &PC->Add(TEXT("DrawTextFormatted"));
PF->Add(TEXT("FontSize"), TEXT("16"));
PF->Add(TEXT("FontTypeFace"), TEXT("Regular"));
PF->Add(TEXT("Tint"), TEXT("(R=1.000000,G=1.000000,B=1.000000,A=1.000000)"));
PF = &PC->Add(TEXT("DrawText"));
PF->Add(TEXT("Tint"), TEXT("(R=1.000000,G=1.000000,B=1.000000,A=1.000000)"));
PF = &PC->Add(TEXT("DrawLines"));
PF->Add(TEXT("Tint"), TEXT("(R=1.000000,G=1.000000,B=1.000000,A=1.000000)"));
PF->Add(TEXT("bAntiAlias"), TEXT("True"));
PF->Add(TEXT("Thickness"), TEXT("1.000000"));
PF = &PC->Add(TEXT("DrawLine"));
PF->Add(TEXT("Tint"), TEXT("(R=1.000000,G=1.000000,B=1.000000,A=1.000000)"));
PF->Add(TEXT("bAntiAlias"), TEXT("True"));
PF->Add(TEXT("Thickness"), TEXT("1.000000"));
PF = &PC->Add(TEXT("DrawBox"));
PF->Add(TEXT("Tint"), TEXT("(R=1.000000,G=1.000000,B=1.000000,A=1.000000)"));
PF = &PC->Add(TEXT("SetInputMode_GameAndUIEx"));
PF->Add(TEXT("InWidgetToFocus"), TEXT("None"));
PF->Add(TEXT("InMouseLockMode"), TEXT("DoNotLock"));
PF->Add(TEXT("bHideCursorDuringCapture"), TEXT("True"));
PF = &PC->Add(TEXT("SetInputMode_GameAndUI"));
PF->Add(TEXT("InWidgetToFocus"), TEXT("None"));
PF->Add(TEXT("bLockMouseToViewport"), TEXT("False"));
PF->Add(TEXT("bHideCursorDuringCapture"), TEXT("True"));
PF = &PC->Add(TEXT("SetInputMode_UIOnlyEx"));
PF->Add(TEXT("InWidgetToFocus"), TEXT("None"));
PF->Add(TEXT("InMouseLockMode"), TEXT("DoNotLock"));
PF = &PC->Add(TEXT("SetInputMode_UIOnly"));
PF->Add(TEXT("InWidgetToFocus"), TEXT("None"));
PF->Add(TEXT("bLockMouseToViewport"), TEXT("False"));

PC = &ParamDefaultMetas.Add(TEXT("WidgetInteractionComponent"));
PF = &PC->Add(TEXT("SendKeyChar"));
PF->Add(TEXT("bRepeat"), TEXT("False"));
PF = &PC->Add(TEXT("PressKey"));
PF->Add(TEXT("bRepeat"), TEXT("False"));

PC = &ParamDefaultMetas.Add(TEXT("Widget"));
PF = &PC->Add(TEXT("HasMouseCaptureByUser"));
PF->Add(TEXT("PointerIndex"), TEXT("-1"));

PC = &ParamDefaultMetas.Add(TEXT("Image"));
PF = &PC->Add(TEXT("SetBrushFromSoftTexture"));
PF->Add(TEXT("bMatchSize"), TEXT("False"));
PF = &PC->Add(TEXT("SetBrushFromTextureDynamic"));
PF->Add(TEXT("bMatchSize"), TEXT("False"));
PF = &PC->Add(TEXT("SetBrushFromAtlasInterface"));
PF->Add(TEXT("bMatchSize"), TEXT("False"));
PF = &PC->Add(TEXT("SetBrushFromTexture"));
PF->Add(TEXT("bMatchSize"), TEXT("False"));

PC = &ParamDefaultMetas.Add(TEXT("UserWidget"));
PF = &PC->Add(TEXT("SetPlaybackSpeed"));
PF->Add(TEXT("PlaybackSpeed"), TEXT("1.000000"));
PF = &PC->Add(TEXT("PlayAnimationReverse"));
PF->Add(TEXT("PlaybackSpeed"), TEXT("1.000000"));
PF->Add(TEXT("bRestoreState"), TEXT("False"));
PF = &PC->Add(TEXT("PlayAnimationForward"));
PF->Add(TEXT("PlaybackSpeed"), TEXT("1.000000"));
PF->Add(TEXT("bRestoreState"), TEXT("False"));
PF = &PC->Add(TEXT("PlayAnimationTimeRange"));
PF->Add(TEXT("StartAtTime"), TEXT("0.000000"));
PF->Add(TEXT("EndAtTime"), TEXT("0.000000"));
PF->Add(TEXT("NumLoopsToPlay"), TEXT("1"));
PF->Add(TEXT("PlayMode"), TEXT("Forward"));
PF->Add(TEXT("PlaybackSpeed"), TEXT("1.000000"));
PF->Add(TEXT("bRestoreState"), TEXT("False"));
PF = &PC->Add(TEXT("PlayAnimation"));
PF->Add(TEXT("StartAtTime"), TEXT("0.000000"));
PF->Add(TEXT("NumLoopsToPlay"), TEXT("1"));
PF->Add(TEXT("PlayMode"), TEXT("Forward"));
PF->Add(TEXT("PlaybackSpeed"), TEXT("1.000000"));
PF->Add(TEXT("bRestoreState"), TEXT("False"));
PF = &PC->Add(TEXT("BindToAnimationEvent"));
PF->Add(TEXT("UserTag"), TEXT("None"));
PF = &PC->Add(TEXT("SetPositionInViewport"));
PF->Add(TEXT("bRemoveDPIScale"), TEXT("True"));
PF = &PC->Add(TEXT("AddToPlayerScreen"));
PF->Add(TEXT("ZOrder"), TEXT("0"));
PF = &PC->Add(TEXT("AddToViewport"));
PF->Add(TEXT("ZOrder"), TEXT("0"));

PC = &ParamDefaultMetas.Add(TEXT("DynamicEntryBox"));
PF = &PC->Add(TEXT("Reset"));
PF->Add(TEXT("bDeleteWidgets"), TEXT("False"));

PC = &ParamDefaultMetas.Add(TEXT("GridPanel"));
PF = &PC->Add(TEXT("AddChildToGrid"));
PF->Add(TEXT("InRow"), TEXT("0"));
PF->Add(TEXT("InColumn"), TEXT("0"));

PC = &ParamDefaultMetas.Add(TEXT("ScrollBox"));
PF = &PC->Add(TEXT("ScrollWidgetIntoView"));
PF->Add(TEXT("AnimateScroll"), TEXT("True"));
PF->Add(TEXT("ScrollDestination"), TEXT("IntoView"));
PF->Add(TEXT("Padding"), TEXT("0.000000"));

PC = &ParamDefaultMetas.Add(TEXT("UniformGridPanel"));
PF = &PC->Add(TEXT("AddChildToUniformGrid"));
PF->Add(TEXT("InRow"), TEXT("0"));
PF->Add(TEXT("InColumn"), TEXT("0"));

PC = &ParamDefaultMetas.Add(TEXT("LevelSequenceActor"));
PF = &PC->Add(TEXT("AddBindingByTag"));
PF->Add(TEXT("bAllowBindingsFromAsset"), TEXT("False"));
PF = &PC->Add(TEXT("AddBinding"));
PF->Add(TEXT("bAllowBindingsFromAsset"), TEXT("False"));
PF = &PC->Add(TEXT("SetBindingByTag"));
PF->Add(TEXT("bAllowBindingsFromAsset"), TEXT("False"));
PF = &PC->Add(TEXT("SetBinding"));
PF->Add(TEXT("bAllowBindingsFromAsset"), TEXT("False"));

PC = &ParamDefaultMetas.Add(TEXT("LevelSequenceMediaController"));
PF = &PC->Add(TEXT("SynchronizeToServer"));
PF->Add(TEXT("DesyncThresholdSeconds"), TEXT("2.000000"));

PC = &ParamDefaultMetas.Add(TEXT("ProceduralFoliageSpawner"));
PF = &PC->Add(TEXT("Simulate"));
PF->Add(TEXT("NumSteps"), TEXT("-1"));

PC = &ParamDefaultMetas.Add(TEXT("LandscapeProxy"));
PF = &PC->Add(TEXT("LandscapeImportHeightmapFromRenderTarget"));
PF->Add(TEXT("InImportHeightFromRGChannel"), TEXT("False"));
PF = &PC->Add(TEXT("LandscapeExportHeightmapToRenderTarget"));
PF->Add(TEXT("InExportHeightIntoRGChannel"), TEXT("False"));
PF->Add(TEXT("InExportLandscapeProxies"), TEXT("True"));
PF = &PC->Add(TEXT("EditorApplySpline"));
PF->Add(TEXT("StartWidth"), TEXT("200.000000"));
PF->Add(TEXT("EndWidth"), TEXT("200.000000"));
PF->Add(TEXT("StartSideFalloff"), TEXT("200.000000"));
PF->Add(TEXT("EndSideFalloff"), TEXT("200.000000"));
PF->Add(TEXT("StartRoll"), TEXT("0.000000"));
PF->Add(TEXT("EndRoll"), TEXT("0.000000"));
PF->Add(TEXT("NumSubdivisions"), TEXT("20"));
PF->Add(TEXT("bRaiseHeights"), TEXT("True"));
PF->Add(TEXT("bLowerHeights"), TEXT("True"));
PF->Add(TEXT("PaintLayer"), TEXT("None"));
PF->Add(TEXT("EditLayerName"), TEXT(""));

PC = &ParamDefaultMetas.Add(TEXT("UserDefinedImageCaptureProtocol"));
PF = &PC->Add(TEXT("WriteImageToDisk"));
PF->Add(TEXT("bCopyImageData"), TEXT("False"));

PC = &ParamDefaultMetas.Add(TEXT("NavigationPath"));
PF = &PC->Add(TEXT("EnableDebugDrawing"));
PF->Add(TEXT("PathColor"), TEXT("(R=1.000000,G=1.000000,B=1.000000,A=1.000000)"));

PC = &ParamDefaultMetas.Add(TEXT("NavigationSystemV1"));
PF = &PC->Add(TEXT("K2_GetRandomPointInNavigableRadius"));
PF->Add(TEXT("NavData"), TEXT("None"));
PF->Add(TEXT("FilterClass"), TEXT("None"));
PF = &PC->Add(TEXT("GetRandomPointInNavigableRadius"));
PF->Add(TEXT("NavData"), TEXT("None"));
PF->Add(TEXT("FilterClass"), TEXT("None"));
PF = &PC->Add(TEXT("GetRandomReachablePointInRadius"));
PF->Add(TEXT("NavData"), TEXT("None"));
PF->Add(TEXT("FilterClass"), TEXT("None"));
PF = &PC->Add(TEXT("ProjectPointToNavigation"));
PF->Add(TEXT("NavData"), TEXT("None"));
PF->Add(TEXT("FilterClass"), TEXT("None"));
PF->Add(TEXT("QueryExtent"), TEXT(""));
PF = &PC->Add(TEXT("RegisterNavigationInvoker"));
PF->Add(TEXT("TileGenerationRadius"), TEXT("3000.000000"));
PF->Add(TEXT("TileRemovalRadius"), TEXT("5000.000000"));
PF = &PC->Add(TEXT("NavigationRaycast"));
PF->Add(TEXT("FilterClass"), TEXT("None"));
PF->Add(TEXT("Querier"), TEXT("None"));
PF = &PC->Add(TEXT("FindPathToActorSynchronously"));
PF->Add(TEXT("TetherDistance"), TEXT("50.000000"));
PF->Add(TEXT("PathfindingContext"), TEXT("None"));
PF->Add(TEXT("FilterClass"), TEXT("None"));
PF = &PC->Add(TEXT("FindPathToLocationSynchronously"));
PF->Add(TEXT("PathfindingContext"), TEXT("None"));
PF->Add(TEXT("FilterClass"), TEXT("None"));
PF = &PC->Add(TEXT("GetPathLength"));
PF->Add(TEXT("NavData"), TEXT("None"));
PF->Add(TEXT("FilterClass"), TEXT("None"));
PF = &PC->Add(TEXT("GetPathCost"));
PF->Add(TEXT("NavData"), TEXT("None"));
PF->Add(TEXT("FilterClass"), TEXT("None"));
PF = &PC->Add(TEXT("K2_GetRandomLocationInNavigableRadius"));
PF->Add(TEXT("NavData"), TEXT("None"));
PF->Add(TEXT("FilterClass"), TEXT("None"));
PF = &PC->Add(TEXT("K2_GetRandomReachablePointInRadius"));
PF->Add(TEXT("NavData"), TEXT("None"));
PF->Add(TEXT("FilterClass"), TEXT("None"));
PF = &PC->Add(TEXT("K2_ProjectPointToNavigation"));
PF->Add(TEXT("QueryExtent"), TEXT(""));

PC = &ParamDefaultMetas.Add(TEXT("NavModifierVolume"));
PF = &PC->Add(TEXT("SetAreaClass"));
PF->Add(TEXT("NewAreaClass"), TEXT("None"));

PC = &ParamDefaultMetas.Add(TEXT("RecastNavMesh"));
PF = &PC->Add(TEXT("K2_ReplaceAreaInTileBounds"));
PF->Add(TEXT("ReplaceLinks"), TEXT("True"));

PC = &ParamDefaultMetas.Add(TEXT("GameplayTask_ClaimResource"));
PF = &PC->Add(TEXT("ClaimResources"));
PF->Add(TEXT("Priority"), TEXT("192"));
PF->Add(TEXT("TaskInstanceName"), TEXT("None"));
PF = &PC->Add(TEXT("ClaimResource"));
PF->Add(TEXT("Priority"), TEXT("192"));
PF->Add(TEXT("TaskInstanceName"), TEXT("None"));

PC = &ParamDefaultMetas.Add(TEXT("GameplayTask_SpawnActor"));
PF = &PC->Add(TEXT("SpawnActor"));
PF->Add(TEXT("bSpawnOnlyOnAuthority"), TEXT("False"));

PC = &ParamDefaultMetas.Add(TEXT("GameplayTask_WaitDelay"));
PF = &PC->Add(TEXT("TaskWaitDelay"));
PF->Add(TEXT("Priority"), TEXT("192"));

PC = &ParamDefaultMetas.Add(TEXT("AIBlueprintHelperLibrary"));
PF = &PC->Add(TEXT("SpawnAIFromClass"));
PF->Add(TEXT("Rotation"), TEXT(""));
PF->Add(TEXT("bNoCollisionFail"), TEXT("False"));
PF->Add(TEXT("Owner"), TEXT("None"));
PF = &PC->Add(TEXT("SendAIMessage"));
PF->Add(TEXT("bSuccess"), TEXT("True"));
PF = &PC->Add(TEXT("CreateMoveToProxyObject"));
PF->Add(TEXT("TargetActor"), TEXT("None"));
PF->Add(TEXT("AcceptanceRadius"), TEXT("5.000000"));
PF->Add(TEXT("bStopOnOverlap"), TEXT("False"));

PC = &ParamDefaultMetas.Add(TEXT("AIController"));
PF = &PC->Add(TEXT("MoveToLocation"));
PF->Add(TEXT("AcceptanceRadius"), TEXT("-1.000000"));
PF->Add(TEXT("bStopOnOverlap"), TEXT("True"));
PF->Add(TEXT("bUsePathfinding"), TEXT("True"));
PF->Add(TEXT("bProjectDestinationToNavigation"), TEXT("False"));
PF->Add(TEXT("bCanStrafe"), TEXT("True"));
PF->Add(TEXT("FilterClass"), TEXT("None"));
PF->Add(TEXT("bAllowPartialPath"), TEXT("True"));
PF = &PC->Add(TEXT("MoveToActor"));
PF->Add(TEXT("AcceptanceRadius"), TEXT("-1.000000"));
PF->Add(TEXT("bStopOnOverlap"), TEXT("True"));
PF->Add(TEXT("bUsePathfinding"), TEXT("True"));
PF->Add(TEXT("bCanStrafe"), TEXT("True"));
PF->Add(TEXT("FilterClass"), TEXT("None"));
PF->Add(TEXT("bAllowPartialPath"), TEXT("True"));

PC = &ParamDefaultMetas.Add(TEXT("NavLocalGridManager"));
PF = &PC->Add(TEXT("RemoveLocalNavigationGrid"));
PF->Add(TEXT("bRebuildGrids"), TEXT("True"));
PF = &PC->Add(TEXT("AddLocalNavigationGridForCapsule"));
PF->Add(TEXT("Radius2D"), TEXT("5"));
PF->Add(TEXT("Height"), TEXT("100.000000"));
PF->Add(TEXT("bRebuildGrids"), TEXT("True"));
PF = &PC->Add(TEXT("AddLocalNavigationGridForBox"));
PF->Add(TEXT("Extent"), TEXT("1.000000,1.000000,1.000000"));
PF->Add(TEXT("Rotation"), TEXT(""));
PF->Add(TEXT("Radius2D"), TEXT("5"));
PF->Add(TEXT("Height"), TEXT("100.000000"));
PF->Add(TEXT("bRebuildGrids"), TEXT("True"));
PF = &PC->Add(TEXT("AddLocalNavigationGridForPoints"));
PF->Add(TEXT("Radius2D"), TEXT("5"));
PF->Add(TEXT("Height"), TEXT("100.000000"));
PF->Add(TEXT("bRebuildGrids"), TEXT("True"));
PF = &PC->Add(TEXT("AddLocalNavigationGridForPoint"));
PF->Add(TEXT("Radius2D"), TEXT("5"));
PF->Add(TEXT("Height"), TEXT("100.000000"));
PF->Add(TEXT("bRebuildGrids"), TEXT("True"));

PC = &ParamDefaultMetas.Add(TEXT("PawnActionsComponent"));
PF = &PC->Add(TEXT("K2_PushAction"));
PF->Add(TEXT("Instigator"), TEXT("None"));
PF = &PC->Add(TEXT("K2_PerformAction"));
PF->Add(TEXT("Priority"), TEXT("HardScript"));

PC = &ParamDefaultMetas.Add(TEXT("AISense_Damage"));
PF = &PC->Add(TEXT("ReportDamageEvent"));
PF->Add(TEXT("Tag"), TEXT("None"));

PC = &ParamDefaultMetas.Add(TEXT("AISense_Hearing"));
PF = &PC->Add(TEXT("ReportNoiseEvent"));
PF->Add(TEXT("Loudness"), TEXT("1.000000"));
PF->Add(TEXT("Instigator"), TEXT("None"));
PF->Add(TEXT("MaxRange"), TEXT("0.000000"));
PF->Add(TEXT("Tag"), TEXT("None"));

PC = &ParamDefaultMetas.Add(TEXT("AITask_MoveTo"));
PF = &PC->Add(TEXT("AIMoveTo"));
PF->Add(TEXT("GoalActor"), TEXT("None"));
PF->Add(TEXT("AcceptanceRadius"), TEXT("-1.000000"));
PF->Add(TEXT("StopOnOverlap"), TEXT("Default"));
PF->Add(TEXT("AcceptPartialPath"), TEXT("Default"));
PF->Add(TEXT("bUsePathfinding"), TEXT("True"));
PF->Add(TEXT("bLockAILogic"), TEXT("True"));
PF->Add(TEXT("bUseContinuosGoalTracking"), TEXT("False"));
PF->Add(TEXT("ProjectGoalOnNavigation"), TEXT("Default"));

PC = &ParamDefaultMetas.Add(TEXT("BTTask_BlueprintBase"));
PF = &PC->Add(TEXT("SetFinishOnMessageWithId"));
PF->Add(TEXT("RequestID"), TEXT("-1"));

PC = &ParamDefaultMetas.Add(TEXT("ARBlueprintLibrary"));
PF = &PC->Add(TEXT("AddTrackedPointWithName"));
PF->Add(TEXT("bDeletePointsWithSameName"), TEXT("True"));
PF = &PC->Add(TEXT("SetARWorldOriginLocationAndRotation"));
PF->Add(TEXT("bIsTransformInWorldSpace"), TEXT("True"));
PF->Add(TEXT("bMaintainUpDirection"), TEXT("True"));
PF = &PC->Add(TEXT("GetObjectClassificationAtLocation"));
PF->Add(TEXT("MaxLocationDiff"), TEXT("10.000000"));
PF = &PC->Add(TEXT("PinComponentToTraceResult"));
PF->Add(TEXT("DebugName"), TEXT("None"));
PF = &PC->Add(TEXT("PinComponent"));
PF->Add(TEXT("TrackedGeometry"), TEXT("None"));
PF->Add(TEXT("DebugName"), TEXT("None"));
PF = &PC->Add(TEXT("DebugDrawPin"));
PF->Add(TEXT("Color"), TEXT("(R=1.000000,G=1.000000,B=0.000000,A=0.750000)"));
PF->Add(TEXT("Scale"), TEXT("5.000000"));
PF->Add(TEXT("PersistForSeconds"), TEXT("0.000000"));
PF = &PC->Add(TEXT("DebugDrawTrackedGeometry"));
PF->Add(TEXT("Color"), TEXT("(R=1.000000,G=1.000000,B=0.000000,A=0.750000)"));
PF->Add(TEXT("OutlineThickness"), TEXT("5.000000"));
PF->Add(TEXT("PersistForSeconds"), TEXT("0.000000"));
PF = &PC->Add(TEXT("LineTraceTrackedObjects3D"));
PF->Add(TEXT("bTestFeaturePoints"), TEXT("True"));
PF->Add(TEXT("bTestGroundPlane"), TEXT("True"));
PF->Add(TEXT("bTestPlaneExtents"), TEXT("True"));
PF->Add(TEXT("bTestPlaneBoundaryPolygon"), TEXT("True"));
PF = &PC->Add(TEXT("LineTraceTrackedObjects"));
PF->Add(TEXT("bTestFeaturePoints"), TEXT("True"));
PF->Add(TEXT("bTestGroundPlane"), TEXT("True"));
PF->Add(TEXT("bTestPlaneExtents"), TEXT("True"));
PF->Add(TEXT("bTestPlaneBoundaryPolygon"), TEXT("True"));

PC = &ParamDefaultMetas.Add(TEXT("ARMeshGeometry"));
PF = &PC->Add(TEXT("GetObjectClassificationAtLocation"));
PF->Add(TEXT("MaxLocationDiff"), TEXT("10.000000"));

PC = &ParamDefaultMetas.Add(TEXT("HeadMountedDisplayFunctionLibrary"));
PF = &PC->Add(TEXT("GetPlayAreaBounds"));
PF->Add(TEXT("Origin"), TEXT("Stage"));
PF = &PC->Add(TEXT("EnumerateTrackedDevices"));
PF->Add(TEXT("SystemId"), TEXT("None"));
PF->Add(TEXT("DeviceType"), TEXT("Any"));
PF = &PC->Add(TEXT("SetSpectatorScreenModeTexturePlusEyeLayout"));
PF->Add(TEXT("bDrawEyeFirst"), TEXT("True"));
PF->Add(TEXT("bClearBlack"), TEXT("False"));
PF->Add(TEXT("bUseAlpha"), TEXT("False"));
PF = &PC->Add(TEXT("SetWorldToMetersScale"));
PF->Add(TEXT("NewScale"), TEXT("100.000000"));
PF = &PC->Add(TEXT("ResetOrientationAndPosition"));
PF->Add(TEXT("Yaw"), TEXT("0.000000"));
PF->Add(TEXT("Options"), TEXT("OrientationAndPosition"));
PF = &PC->Add(TEXT("GetTrackingSensorParameters"));
PF->Add(TEXT("Index"), TEXT("0"));

PC = &ParamDefaultMetas.Add(TEXT("XRLoadingScreenFunctionLibrary"));
PF = &PC->Add(TEXT("AddLoadingScreenSplash"));
PF->Add(TEXT("Size"), TEXT("(X=1.000,Y=1.000)"));
PF->Add(TEXT("DeltaRotation"), TEXT(""));
PF->Add(TEXT("bClearBeforeAdd"), TEXT("False"));
PF = &PC->Add(TEXT("SetLoadingScreen"));
PF->Add(TEXT("Scale"), TEXT("(X=1.000,Y=1.000)"));
PF->Add(TEXT("Offset"), TEXT(""));
PF->Add(TEXT("bShowLoadingMovie"), TEXT("False"));
PF->Add(TEXT("bShowOnSet"), TEXT("False"));

PC = &ParamDefaultMetas.Add(TEXT("PaperFlipbook"));
PF = &PC->Add(TEXT("GetSpriteAtTime"));
PF->Add(TEXT("bClampToEnds"), TEXT("False"));
PF = &PC->Add(TEXT("GetKeyFrameIndexAtTime"));
PF->Add(TEXT("bClampToEnds"), TEXT("False"));

PC = &ParamDefaultMetas.Add(TEXT("PaperGroupedSpriteComponent"));
PF = &PC->Add(TEXT("UpdateInstanceColor"));
PF->Add(TEXT("bMarkRenderStateDirty"), TEXT("True"));
PF = &PC->Add(TEXT("UpdateInstanceTransform"));
PF->Add(TEXT("bWorldSpace"), TEXT("False"));
PF->Add(TEXT("bMarkRenderStateDirty"), TEXT("True"));
PF->Add(TEXT("bTeleport"), TEXT("False"));
PF = &PC->Add(TEXT("GetInstanceTransform"));
PF->Add(TEXT("bWorldSpace"), TEXT("False"));
PF = &PC->Add(TEXT("AddInstance"));
PF->Add(TEXT("bWorldSpace"), TEXT("False"));
PF->Add(TEXT("Color"), TEXT("(R=1.000000,G=1.000000,B=1.000000,A=1.000000)"));

PC = &ParamDefaultMetas.Add(TEXT("PaperTileMapComponent"));
PF = &PC->Add(TEXT("SetLayerCollision"));
PF->Add(TEXT("Layer"), TEXT("0"));
PF->Add(TEXT("bHasCollision"), TEXT("True"));
PF->Add(TEXT("bOverrideThickness"), TEXT("True"));
PF->Add(TEXT("CustomThickness"), TEXT("50.000000"));
PF->Add(TEXT("bOverrideOffset"), TEXT("False"));
PF->Add(TEXT("CustomOffset"), TEXT("0.000000"));
PF->Add(TEXT("bRebuildCollision"), TEXT("True"));
PF = &PC->Add(TEXT("SetDefaultCollisionThickness"));
PF->Add(TEXT("bRebuildCollision"), TEXT("True"));
PF = &PC->Add(TEXT("GetTilePolygon"));
PF->Add(TEXT("LayerIndex"), TEXT("0"));
PF->Add(TEXT("bWorldSpace"), TEXT("False"));
PF = &PC->Add(TEXT("GetTileCenterPosition"));
PF->Add(TEXT("LayerIndex"), TEXT("0"));
PF->Add(TEXT("bWorldSpace"), TEXT("False"));
PF = &PC->Add(TEXT("GetTileCornerPosition"));
PF->Add(TEXT("LayerIndex"), TEXT("0"));
PF->Add(TEXT("bWorldSpace"), TEXT("False"));
PF = &PC->Add(TEXT("SetLayerColor"));
PF->Add(TEXT("Layer"), TEXT("0"));
PF = &PC->Add(TEXT("GetLayerColor"));
PF->Add(TEXT("Layer"), TEXT("0"));
PF = &PC->Add(TEXT("CreateNewTileMap"));
PF->Add(TEXT("MapWidth"), TEXT("4"));
PF->Add(TEXT("MapHeight"), TEXT("4"));
PF->Add(TEXT("TileWidth"), TEXT("32"));
PF->Add(TEXT("TileHeight"), TEXT("32"));
PF->Add(TEXT("PixelsPerUnrealUnit"), TEXT("1.000000"));
PF->Add(TEXT("bCreateLayer"), TEXT("True"));

PC = &ParamDefaultMetas.Add(TEXT("TemplateSequenceActor"));
PF = &PC->Add(TEXT("SetBinding"));
PF->Add(TEXT("bOverridesDefault"), TEXT("True"));

PC = &ParamDefaultMetas.Add(TEXT("MatineeCameraShake"));
PF = &PC->Add(TEXT("StartMatineeCameraShakeFromSource"));
PF->Add(TEXT("Scale"), TEXT("1.000000"));
PF->Add(TEXT("PlaySpace"), TEXT("CameraLocal"));
PF->Add(TEXT("UserPlaySpaceRot"), TEXT(""));
PF = &PC->Add(TEXT("StartMatineeCameraShake"));
PF->Add(TEXT("Scale"), TEXT("1.000000"));
PF->Add(TEXT("PlaySpace"), TEXT("CameraLocal"));
PF->Add(TEXT("UserPlaySpaceRot"), TEXT(""));

PC = &ParamDefaultMetas.Add(TEXT("LevelVariantSetsActor"));
PF = &PC->Add(TEXT("GetLevelVariantSets"));
PF->Add(TEXT("bLoad"), TEXT("False"));

PC = &ParamDefaultMetas.Add(TEXT("Variant"));
PF = &PC->Add(TEXT("SetThumbnailFromCamera"));
PF->Add(TEXT("FOVDegrees"), TEXT("50.000000"));
PF->Add(TEXT("MinZ"), TEXT("50.000000"));
PF->Add(TEXT("Gamma"), TEXT("2.200000"));

PC = &ParamDefaultMetas.Add(TEXT("VariantSet"));
PF = &PC->Add(TEXT("SetThumbnailFromCamera"));
PF->Add(TEXT("FOVDegrees"), TEXT("50.000000"));
PF->Add(TEXT("MinZ"), TEXT("50.000000"));
PF->Add(TEXT("Gamma"), TEXT("2.200000"));

PC = &ParamDefaultMetas.Add(TEXT("AutomationUtilsBlueprintLibrary"));
PF = &PC->Add(TEXT("TakeGameplayAutomationScreenshot"));
PF->Add(TEXT("MaxGlobalError"), TEXT("0.020000"));
PF->Add(TEXT("MaxLocalError"), TEXT("0.120000"));
PF->Add(TEXT("MapNameOverride"), TEXT(""));

PC = &ParamDefaultMetas.Add(TEXT("ChaosClothingInteractor"));
PF = &PC->Add(TEXT("ResetAndTeleport"));
PF->Add(TEXT("bReset"), TEXT("False"));
PF->Add(TEXT("bTeleport"), TEXT("False"));
PF = &PC->Add(TEXT("SetVelocityScale"));
PF->Add(TEXT("LinearVelocityScale"), TEXT("0.750000,0.750000,0.750000"));
PF->Add(TEXT("AngularVelocityScale"), TEXT("0.750000"));
PF->Add(TEXT("FictitiousAngularScale"), TEXT("1.000000"));
PF = &PC->Add(TEXT("SetAnimDrive"));
PF->Add(TEXT("AnimDriveStiffness"), TEXT("(X=0.000,Y=1.000)"));
PF->Add(TEXT("AnimDriveDamping"), TEXT("(X=0.000,Y=1.000)"));
PF = &PC->Add(TEXT("SetAnimDriveLinear"));
PF->Add(TEXT("AnimDriveStiffness"), TEXT("0.000000"));
PF = &PC->Add(TEXT("SetGravity"));
PF->Add(TEXT("GravityScale"), TEXT("1.000000"));
PF->Add(TEXT("bIsGravityOverridden"), TEXT("False"));
PF->Add(TEXT("GravityOverride"), TEXT("0.000000,0.000000,-981.000000"));
PF = &PC->Add(TEXT("SetAerodynamics"));
PF->Add(TEXT("DragCoefficient"), TEXT("0.070000"));
PF->Add(TEXT("LiftCoefficient"), TEXT("0.035000"));
PF->Add(TEXT("WindVelocity"), TEXT("0.000000,0.000000,0.000000"));
PF = &PC->Add(TEXT("SetDamping"));
PF->Add(TEXT("DampingCoefficient"), TEXT("0.010000"));
PF = &PC->Add(TEXT("SetCollision"));
PF->Add(TEXT("CollisionThickness"), TEXT("1.000000"));
PF->Add(TEXT("FrictionCoefficient"), TEXT("0.800000"));
PF->Add(TEXT("bUseCCD"), TEXT("False"));
PF->Add(TEXT("SelfCollisionThickness"), TEXT("2.000000"));
PF = &PC->Add(TEXT("SetLongRangeAttachment"));
PF->Add(TEXT("TetherStiffness"), TEXT("(X=0.000,Y=1.000)"));
PF = &PC->Add(TEXT("SetLongRangeAttachmentLinear"));
PF->Add(TEXT("TetherStiffness"), TEXT("1.000000"));
PF = &PC->Add(TEXT("SetMaterialLinear"));
PF->Add(TEXT("EdgeStiffness"), TEXT("1.000000"));
PF->Add(TEXT("BendingStiffness"), TEXT("1.000000"));
PF->Add(TEXT("AreaStiffness"), TEXT("1.000000"));

PC = &ParamDefaultMetas.Add(TEXT("EditableMesh"));
PF = &PC->Add(TEXT("EndModification"));
PF->Add(TEXT("bFromUndo"), TEXT("False"));

PC = &ParamDefaultMetas.Add(TEXT("KismetProceduralMeshLibrary"));
PF = &PC->Add(TEXT("CreateGridMeshSplit"));
PF->Add(TEXT("GridSpacing"), TEXT("16.000000"));
PF = &PC->Add(TEXT("CreateGridMeshWelded"));
PF->Add(TEXT("GridSpacing"), TEXT("16.000000"));

PC = &ParamDefaultMetas.Add(TEXT("NiagaraComponent"));
PF = &PC->Add(TEXT("SetAsset"));
PF->Add(TEXT("bResetExistingOverrideParameters"), TEXT("True"));

PC = &ParamDefaultMetas.Add(TEXT("NiagaraFunctionLibrary"));
PF = &PC->Add(TEXT("SpawnSystemAttached"));
PF->Add(TEXT("bAutoActivate"), TEXT("True"));
PF->Add(TEXT("PoolingMethod"), TEXT("None"));
PF->Add(TEXT("bPreCullCheck"), TEXT("True"));
PF = &PC->Add(TEXT("SpawnSystemAtLocation"));
PF->Add(TEXT("Rotation"), TEXT(""));
PF->Add(TEXT("Scale"), TEXT("1.000000,1.000000,1.000000"));
PF->Add(TEXT("bAutoDestroy"), TEXT("True"));
PF->Add(TEXT("bAutoActivate"), TEXT("True"));
PF->Add(TEXT("PoolingMethod"), TEXT("None"));
PF->Add(TEXT("bPreCullCheck"), TEXT("True"));

PC = &ParamDefaultMetas.Add(TEXT("MagicLeapHMDFunctionLibrary"));
PF = &PC->Add(TEXT("SetStabilizationDepthActor"));
PF->Add(TEXT("bSetFocusActor"), TEXT("True"));
PF = &PC->Add(TEXT("SetFocusActor"));
PF->Add(TEXT("bSetStabilizationActor"), TEXT("True"));

PC = &ParamDefaultMetas.Add(TEXT("MagicLeapHandTrackingFunctionLibrary"));
PF = &PC->Add(TEXT("SetConfiguration"));
PF->Add(TEXT("KeypointsFilterLevel"), TEXT("NoFilter"));
PF->Add(TEXT("GestureFilterLevel"), TEXT("NoFilter"));
PF->Add(TEXT("bTrackingEnabled"), TEXT("True"));

PC = &ParamDefaultMetas.Add(TEXT("ImgMediaSource"));
PF = &PC->Add(TEXT("AddTargetObject"));
PF->Add(TEXT("Width"), TEXT("-1.000000"));

PC = &ParamDefaultMetas.Add(TEXT("AchievementWriteCallbackProxy"));
PF = &PC->Add(TEXT("WriteAchievementProgress"));
PF->Add(TEXT("Progress"), TEXT("100.000000"));
PF->Add(TEXT("UserTag"), TEXT("0"));

PC = &ParamDefaultMetas.Add(TEXT("AppleImageUtilsBaseAsyncTaskBlueprintProxy"));
PF = &PC->Add(TEXT("CreateProxyObjectForConvertToPNG"));
PF->Add(TEXT("bWantColor"), TEXT("True"));
PF->Add(TEXT("bUseGpu"), TEXT("True"));
PF->Add(TEXT("Scale"), TEXT("1.000000"));
PF->Add(TEXT("Rotate"), TEXT("None"));
PF = &PC->Add(TEXT("CreateProxyObjectForConvertToTIFF"));
PF->Add(TEXT("bWantColor"), TEXT("True"));
PF->Add(TEXT("bUseGpu"), TEXT("True"));
PF->Add(TEXT("Scale"), TEXT("1.000000"));
PF->Add(TEXT("Rotate"), TEXT("None"));
PF = &PC->Add(TEXT("CreateProxyObjectForConvertToHEIF"));
PF->Add(TEXT("Quality"), TEXT("85"));
PF->Add(TEXT("bWantColor"), TEXT("True"));
PF->Add(TEXT("bUseGpu"), TEXT("True"));
PF->Add(TEXT("Scale"), TEXT("1.000000"));
PF->Add(TEXT("Rotate"), TEXT("None"));
PF = &PC->Add(TEXT("CreateProxyObjectForConvertToJPEG"));
PF->Add(TEXT("Quality"), TEXT("85"));
PF->Add(TEXT("bWantColor"), TEXT("True"));
PF->Add(TEXT("bUseGpu"), TEXT("True"));
PF->Add(TEXT("Scale"), TEXT("1.000000"));
PF->Add(TEXT("Rotate"), TEXT("None"));

PC = &ParamDefaultMetas.Add(TEXT("CableComponent"));
PF = &PC->Add(TEXT("SetAttachEndTo"));
PF->Add(TEXT("SocketName"), TEXT("None"));
PF = &PC->Add(TEXT("SetAttachEndToComponent"));
PF->Add(TEXT("SocketName"), TEXT("None"));

PC = &ParamDefaultMetas.Add(TEXT("OculusFunctionLibrary"));
PF = &PC->Add(TEXT("GetGuardianPoints"));
PF->Add(TEXT("UsePawnSpace"), TEXT("False"));
PF = &PC->Add(TEXT("SetColorScaleAndOffset"));
PF->Add(TEXT("bApplyToAllLayers"), TEXT("False"));
PF = &PC->Add(TEXT("AddLoadingSplashScreen"));
PF->Add(TEXT("SizeInMeters"), TEXT("(X=1.000,Y=1.000)"));
PF->Add(TEXT("DeltaRotation"), TEXT(""));
PF->Add(TEXT("bClearBeforeAdd"), TEXT("False"));
PF = &PC->Add(TEXT("GetRawSensorData"));
PF->Add(TEXT("DeviceType"), TEXT("HMD"));
PF = &PC->Add(TEXT("GetPose"));
PF->Add(TEXT("bUseOrienationForPlayerCamera"), TEXT("False"));
PF->Add(TEXT("bUsePositionForPlayerCamera"), TEXT("False"));
PF->Add(TEXT("PositionScale"), TEXT(""));

PC = &ParamDefaultMetas.Add(TEXT("OculusMRFunctionLibrary"));
PF = &PC->Add(TEXT("SetMrcScalingFactor"));
PF->Add(TEXT("ScalingFactor"), TEXT("1.000000"));

PC = &ParamDefaultMetas.Add(TEXT("OculusInputFunctionLibrary"));
PF = &PC->Add(TEXT("GetDominantHand"));
PF->Add(TEXT("ControllerIndex"), TEXT("0"));
PF = &PC->Add(TEXT("GetHandScale"));
PF->Add(TEXT("ControllerIndex"), TEXT("0"));
PF = &PC->Add(TEXT("GetTrackingConfidence"));
PF->Add(TEXT("ControllerIndex"), TEXT("0"));
PF = &PC->Add(TEXT("IsPointerPoseValid"));
PF->Add(TEXT("ControllerIndex"), TEXT("0"));
PF = &PC->Add(TEXT("GetPointerPose"));
PF->Add(TEXT("ControllerIndex"), TEXT("0"));
PF = &PC->Add(TEXT("GetBoneRotation"));
PF->Add(TEXT("ControllerIndex"), TEXT("0"));
PF = &PC->Add(TEXT("InitializeHandPhysics"));
PF->Add(TEXT("WorldToMeters"), TEXT("100.000000"));
PF = &PC->Add(TEXT("GetHandSkeletalMesh"));
PF->Add(TEXT("WorldToMeters"), TEXT("100.000000"));

PC = &ParamDefaultMetas.Add(TEXT("LiveLinkPreset"));
PF = &PC->Add(TEXT("AddToClient"));
PF->Add(TEXT("bRecreatePresets"), TEXT("True"));

PC = &ParamDefaultMetas.Add(TEXT("SteamVRInputDeviceFunctionLibrary"));
PF = &PC->Add(TEXT("FindSteamVR_InputBindingInfo"));
PF->Add(TEXT("ActionSet"), TEXT("main"));
PF = &PC->Add(TEXT("GetSteamVR_HandPoseRelativeToNow"));
PF->Add(TEXT("Hand"), TEXT("VR_Left"));
PF->Add(TEXT("PredictedSecondsFromNow"), TEXT("0.000000"));
PF = &PC->Add(TEXT("FindSteamVR_ActionOrigin"));
PF->Add(TEXT("ActionSet"), TEXT("main"));
PF = &PC->Add(TEXT("FindSteamVR_OriginTrackedDeviceInfo"));
PF->Add(TEXT("ActionSet"), TEXT("main"));
PF = &PC->Add(TEXT("FindSteamVR_Action"));
PF->Add(TEXT("ActionSet"), TEXT("main"));
PF = &PC->Add(TEXT("GetSkeletalTransform"));
PF->Add(TEXT("bWithController"), TEXT("False"));
PF = &PC->Add(TEXT("PlaySteamVR_HapticFeedback"));
PF->Add(TEXT("DurationSeconds"), TEXT("1.000000"));
PF->Add(TEXT("Frequency"), TEXT("1.000000"));
PF->Add(TEXT("Amplitude"), TEXT("0.500000"));
PF = &PC->Add(TEXT("GetFingerCurlsAndSplays"));
PF->Add(TEXT("SummaryDataType"), TEXT("VR_SummaryType_FromAnimation"));

PC = &ParamDefaultMetas.Add(TEXT("GranularSynth"));
PF = &PC->Add(TEXT("SetPlayheadTime"));
PF->Add(TEXT("LerpTimeSec"), TEXT("0.000000"));
PF->Add(TEXT("SeekType"), TEXT("FromBeginning"));
PF = &PC->Add(TEXT("SetGrainDuration"));
PF->Add(TEXT("DurationRange"), TEXT(""));
PF = &PC->Add(TEXT("SetGrainPan"));
PF->Add(TEXT("PanRange"), TEXT(""));
PF = &PC->Add(TEXT("SetGrainVolume"));
PF->Add(TEXT("VolumeRange"), TEXT(""));
PF = &PC->Add(TEXT("SetGrainPitch"));
PF->Add(TEXT("PitchRange"), TEXT(""));
PF = &PC->Add(TEXT("NoteOff"));
PF->Add(TEXT("bKill"), TEXT("False"));
PF = &PC->Add(TEXT("NoteOn"));
PF->Add(TEXT("Duration"), TEXT("-1.000000"));

PC = &ParamDefaultMetas.Add(TEXT("ModularSynthComponent"));
PF = &PC->Add(TEXT("NoteOff"));
PF->Add(TEXT("bAllNotesOff"), TEXT("False"));
PF->Add(TEXT("bKillAllNotes"), TEXT("False"));
PF = &PC->Add(TEXT("NoteOn"));
PF->Add(TEXT("Duration"), TEXT("-1.000000"));

PC = &ParamDefaultMetas.Add(TEXT("SynthSamplePlayer"));
PF = &PC->Add(TEXT("SeekToTime"));
PF->Add(TEXT("bWrap"), TEXT("True"));

